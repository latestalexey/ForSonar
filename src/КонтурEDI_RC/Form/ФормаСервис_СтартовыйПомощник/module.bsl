Перем СоединениеFTP;

Процедура НадписьРасширенныеНастройкиПодключенияНажатие(Элемент)
	
	ВидныРасширенныеНастройки = ЭлементыФормы.ПанельРасширенныхНастроек.Видимость;
	
	Если ВидныРасширенныеНастройки Тогда
		ЭлементыФормы.НадписьРасширенныеНастройкиПодключения.Заголовок = "Показать настройки соединения";
	Иначе
		ЭлементыФормы.НадписьРасширенныеНастройкиПодключения.Заголовок = "Скрыть настройки соединения";
	КонецЕсли;
		
	ЭлементыФормы.ПанельРасширенныхНастроек.Видимость = НЕ ВидныРасширенныеНастройки;
	
КонецПроцедуры

Функция мПодключитьсяКFTP()
		
	Попытка
		
		ФТПСоединение = Новый FTPСоединение(СокрЛП(Сервер), Порт, СокрЛП(ЛогинFTP), СокрЛП(ПарольFTP), , ПассивныйРежим);
		
	Исключение

		Возврат "пароль";
		
	КонецПопытки;
	
	Возврат "ок";
	
КонецФункции

Процедура КнопкаПроверитьFTPНажатие(Элемент)
	
	ПроверитьНастройкиПодключенияИнтерактивно();
	
КонецПроцедуры

Функция ПроверитьНастройкиПодключенияИнтерактивно()
	
	Если НЕ ЗначениеЗаполнено(ЛогинFTP) Тогда
		ВывестиПредупреждение_КонтурEDI("Не указан логин для доступа к EDI!");
		Возврат Ложь;
	ИначеЕсли НЕ ЗначениеЗаполнено(ПарольFTP) Тогда	
		ВывестиПредупреждение_КонтурEDI("Не указан пароль для доступа к EDI!");
		Возврат Ложь;
	//ИначеЕсли НЕ ЗначениеЗаполнено(Сервер) Тогда	
	//	ВывестиПредупреждение_КонтурEDI("Не указан FTP сервер! (он указывается в расширенных настройках подключения)");
	//	Возврат;
	КонецЕсли;	
	
	Если ПротоколОбмена_КонтурEDI = "API" Тогда
		РезультатАвторизации = АвторизоватьсяВAPI(ЛогинFTP,ПарольFTP);
	Иначе	
		РезультатАвторизации = мПодключитьсяКFTP();
	КонецЕсли;
	
	Если РезультатАвторизации="ок" Тогда
		
		ВывестиПредупреждение_КонтурEDI("Проверка подключения прошла успешно!");
		
		ЭлементыФормы.КартинкаПроверкиПодключения.Видимость	= Истина;
		ЭлементыФормы.КартинкаПроверкиПодключения.Картинка	= ПолучитьКартинкуEDI("ЭлементФормы",	"КартинкаГалочка");
		
	ИначеЕсли РезультатАвторизации="пароль" Тогда
		
		ВывестиПредупреждение_КонтурEDI("Проверьте логин и пароль.",,"Не удалось подключиться к EDI");
		
		ЭлементыФормы.КартинкаПроверкиПодключения.Видимость	= Истина;
		ЭлементыФормы.КартинкаПроверкиПодключения.Картинка	= ПолучитьКартинкуEDI("ЭлементФормы",	"КартинкаПредупреждение");
		
		Возврат Ложь;
		
	Иначе//подключение	
		
		ВывестиПредупреждение_КонтурEDI(
		"Возможно, с этого компьютера нет доступа к нашему серверу https://edi-api.kontur.ru.
		|Обратитесь к системному администратору для настройки.",,"Не удалось подключиться к EDI");
		
		ЭлементыФормы.КартинкаПроверкиПодключения.Видимость	= Истина;
		ЭлементыФормы.КартинкаПроверкиПодключения.Картинка	= ПолучитьКартинкуEDI("ЭлементФормы",	"КартинкаПредупреждение");
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции	

Процедура ПриОткрытии()
	
	Сервер				= ПолучитьКонстантуEDI("Сервер");
	Порт				= ПолучитьКонстантуEDI("Порт");
	ЛогинПрокси			= ПолучитьКонстантуEDI("ЛогинПрокси");
	ПарольПрокси		= ПолучитьКонстантуEDI("ПарольПрокси");
	ПассивныйРежим	   	= ПолучитьКонстантуEDI("ПассивныйРежим");
	ИспользуетсяПрокси	= ПолучитьКонстантуEDI("ИспользуетсяПрокси");
	
	GLNЮрФизЛица	= ПолучитьКонстантуEDI("GLN_Основной");
	
	СписокЮрЛиц = ПолучитьСписокЭлементовСправочника("ЮрФизЛицаСвои");
	
	ТекЮрЛицо = Неопределено;
	
	Если СписокЮрЛиц.Количество()=1 Тогда
		
		ТекЮрЛицо = СписокЮрЛиц[0];
		ЮрФизЛицоСвое = СписокЮрЛиц[0].ЮрФизЛицо;
		
	ИначеЕсли СписокЮрЛиц.Количество()>1 Тогда
		
		ЭлементыФормы.GLNЮрФизЛица.Доступность = Ложь;
		ЭлементыФормы.ЮрФизЛицоСвое.Доступность = Ложь;
		
		ЮрФизЛицоСвое = СписокЮрЛиц[0].ЮрФизЛицо;
		
	КонецЕсли;	
	
	УстановитьТипЗначенияПоля("ЮрФизЛицоСвое","ЮрФизЛицоСвое");
	УстановитьТипЗначенияКолонки(ЭлементыФормы.СписокЮрФизЛицТорговыхСетей.Колонки.Контрагент,	"ЮрФизЛицоСтороннее");
	
	Если НЕ ЗначениеЗаполнено(Сервер) Тогда
		Сервер = "ftp-edi.kontur.ru";
		ПассивныйРежим = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Порт) Тогда
		Порт = 21;
	КонецЕсли;
	
	УчетнаяЗаписьПоУмолчанию = ПолучитьКонстантуEDI("УчетнаяЗаписьПоУмолчанию");
	Если ЗначениеЗаполнено(УчетнаяЗаписьПоУмолчанию) Тогда
		
		УчетнаяЗаписьЭлемент = ПолучитьЭлементСправочника("УчетныеЗаписи", УчетнаяЗаписьПоУмолчанию);
		
		ЛогинFTP	= УчетнаяЗаписьЭлемент.Логин;
		ПарольFTP	= УчетнаяЗаписьЭлемент.Пароль;
		
	КонецЕсли;
	
	GLN					= ПолучитьКонстантуEDI("GLN_Основной");
	
	МыПоставщик			= ПолучитьКонстантуEDI("МыПоставщик");
	МыТорговаяСеть		= ПолучитьКонстантуEDI("МыТорговаяСеть");
	
	ПротоколОбмена_КонтурEDI		= ПолучитьКонстантуEDI("ПротоколОбмена_КонтурEDI");
	Если Не ЗначениеЗаполнено(ПротоколОбмена_КонтурEDI) Тогда
		ПротоколОбмена_КонтурEDI = "API";
	Иначе
		ЭлементыФормы.ПанельПротоколОбмена.Видимость = Ложь;//не будем ничего перевыбирать
	КонецЕсли;	
	
	УстановитьСтраницу("НастройкаПодключения");
	
	УправлениеДоступностьюПолейНастройкиПрокси();
	
	ОбновитьДеревоЮрФизЛицТорговыхСетей();
	
	
	//Заполним начальные настройки цепочек документов.
	//По умолчанию выберем первые в списках - они самые полные.
	НадоОбновитьТаблицуТипов = Ложь;
	Если Не ЗначениеЗаполнено(ПолучитьКонстантуEDI("ШаблонЦепочкиДокументов_Поставщик")) Тогда
		СписокШаблонов = ПолучитьСписокДоступныхШаблоновЦепочки("Поставщик");
		Если СписокШаблонов.Количество()>0 Тогда
			УстановитьКонстантуEDI("ШаблонЦепочкиДокументов_Поставщик",	СписокШаблонов[0].Представление);
			НадоОбновитьТаблицуТипов = Истина;
		КонецЕсли;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ПолучитьКонстантуEDI("ШаблонЦепочкиДокументов_Покупатель")) Тогда
		СписокШаблонов = ПолучитьСписокДоступныхШаблоновЦепочки("Покупатель");
		Если СписокШаблонов.Количество()>0 Тогда
			УстановитьКонстантуEDI("ШаблонЦепочкиДокументов_Покупатель",	СписокШаблонов[0].Представление);
			НадоОбновитьТаблицуТипов = Истина;
		КонецЕсли;
	КонецЕсли;	
	
	Если НадоОбновитьТаблицуТипов Тогда
		ФинализироватьПодключаемыеМодули();
		ИнициализироватьПодключаемыеМодули();
		//ОбновитьТаблицуТиповЗначенияОбъектов();
	КонецЕсли;
		
КонецПроцедуры

Процедура УстановитьСтраницу(ИмяСтраницы)
	
	ЭлементыФормы.НадписьДанныеОКомпании.ЦветФона		= WebЦвета.СлоноваяКость;
	ЭлементыФормы.НадписьНастройкаПодключения.ЦветФона	= WebЦвета.СлоноваяКость;
	ЭлементыФормы.НадписьСведенияОПартнерах.ЦветФона	= WebЦвета.СлоноваяКость;
	
	ЭлементыФормы["Надпись"+СокрЛП(ИмяСтраницы)].ЦветФона = WebЦвета.ЗамшаСветлый;
	
	ПанельСтраниц = ЭлементыФормы.ПанельСтраниц;
	
	ПанельСтраниц.ТекущаяСтраница = ПанельСтраниц.Страницы["Страница" + ИмяСтраницы];
	
	Если ИмяСтраницы = "НастройкаПодключения" Тогда
		ЭлементыФормы.КнопкаНазад.Видимость = Ложь;
	ИначеЕсли ИмяСтраницы = "ДанныеОКомпании" Тогда
		ЭлементыФормы.КнопкаНазад.Видимость = Истина;
		ЭлементыФормы.КнопкаДалее.Заголовок = "Далее";
		ЭлементыФормы.КнопкаДалее.ПоложениеКартинки = ПоложениеКартинкиКнопки.Право;
		ЭлементыФормы.КнопкаДалее.Картинка = ПолучитьКартинкуEDI("ЭлементФормы","КартинкаПраво");
	Иначе
		ЭлементыФормы.КнопкаДалее.Заголовок = "Готово";
		ЭлементыФормы.КнопкаДалее.ПоложениеКартинки = ПоложениеКартинкиКнопки.Лево;
		ЭлементыФормы.КнопкаДалее.Картинка = ПолучитьКартинкуEDI("ЭлементФормы","КартинкаГалочка");
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьСведенияОКомпании()
	
	ЕстьОшибки = Ложь;
	
	ТаблицаОшибок = ИнициализироватьТаблицуОшибок();
	
	ПроверитьПолеФормы(ТаблицаОшибок, GLNЮрФизЛица, "GLN",	Истина, "GLN");
	
	Если ТаблицаОшибок.Количество() > 0 Тогда
		
		ЕстьОшибки = Истина;
		ЭлементыФормы.НадписьУкажитеGLN.Видимость = Истина;
		
	Иначе
		
		ЭлементыФормы.НадписьУкажитеGLN.Видимость = Ложь;
		
	КонецЕсли;
	
	Если НЕ МыПоставщик И НЕ МыТорговаяСеть Тогда
		
		ЕстьОшибки = Истина;
		ЭлементыФормы.НадписьУкажитеВидКомпании.Видимость = Истина;
		
	Иначе
		
		ЭлементыФормы.НадписьУкажитеВидКомпании.Видимость = Ложь;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЮрФизЛицоСвое) Тогда
		
		ЭлементыФормы.НадписьУкажитеОрганизацию.Видимость = Ложь;
		
	Иначе
		
		ЕстьОшибки = Истина;
		ЭлементыФормы.НадписьУкажитеОрганизацию.Видимость = Истина;
		
	КонецЕсли;
	
	
	Возврат НЕ ЕстьОшибки;
		
КонецФункции

Процедура КнопкаДалееНажатие(Элемент)
	                                                                                              
	ПанельСтраниц = ЭлементыФормы.ПанельСтраниц;
	
	Если ПанельСтраниц.ТекущаяСтраница = ПанельСтраниц.Страницы.СтраницаНастройкаПодключения Тогда
		
		УстановитьКонстантуEDI("Сервер", 			Сервер);
		УстановитьКонстантуEDI("Порт", 				Порт);
		УстановитьКонстантуEDI("ПассивныйРежим",		ПассивныйРежим);
				
		УчетнаяЗаписьПоУмолчанию = ПолучитьКонстантуEDI("УчетнаяЗаписьПоУмолчанию");
		УстановитьУчетнуюЗаписьПоУмолчанию = Ложь;
		
		УстановитьУчетнуюЗаписьПоУмолчанию = (УчетнаяЗаписьПоУмолчанию  = Неопределено);
			
		Если Не ПроверитьНастройкиПодключенияИнтерактивно() Тогда
			Возврат;
		КонецЕсли;
		
		СтруктураПолей = Новый Структура();
		СтруктураПолей.Вставить("Логин",	ЛогинFTP);
		СтруктураПолей.Вставить("Пароль",	ПарольFTP);

		СохранитьЭлементСправочника("УчетныеЗаписи", УчетнаяЗаписьПоУмолчанию, СтруктураПолей);
		
		Если УстановитьУчетнуюЗаписьПоУмолчанию Тогда
			
			УчетнаяЗапись = УчетнаяЗаписьПоУмолчанию;
			
			УстановитьКонстантуEDI("УчетнаяЗаписьПоУмолчанию", УчетнаяЗапись);

		КонецЕсли;
		
		ПараметрыПользователяEDI = ПолучитьПараметрыТекущегоПользователяEDI();	
		
		Если ПротоколОбмена_КонтурEDI = "API" Тогда
			//создадим необходимые справочники в системе: Организации (API), ТранспортныеЯщики
			Если Не ОбновитьСписокОрганизацийПоУчетнымЗаписям() Тогда
				ВывестиПредупреждение_КонтурEDI("Не удалось заполнить настройки обмена через API");
				Возврат;
			КонецЕсли;
		КонецЕсли;
	
		УстановитьКонстантуEDI("ПротоколОбмена_КонтурEDI",ПротоколОбмена_КонтурEDI);
		
		Если ЭлементыФормы.ЮрФизЛицоСвое.Доступность Тогда

			ПолучитьНастройкиССервера();
			ПроверитьСведенияОКомпании();
			
		КонецЕсли;
			
		УстановитьСтраницу("ДанныеОКомпании");
		
	ИначеЕсли ПанельСтраниц.ТекущаяСтраница = ПанельСтраниц.Страницы.СтраницаДанныеОКомпании Тогда
		
		Если ПроверитьСведенияОКомпании() Тогда
			
			Если ЭлементыФормы.ЮрФизЛицоСвое.Доступность Тогда
				
				УстановитьКонстантуEDI("МыТорговаяСеть",	МыТорговаяСеть);
				УстановитьКонстантуEDI("МыПоставщик",		МыПоставщик);
				
				УстановитьКонстантуEDI("GLN_Основной",		GLNЮрФизЛица);
				
				ТаблицаЮрФизЛиц = Новый ТаблицаЗначений;
				ТаблицаЮрФизЛиц.Колонки.Добавить("GLN");
				ТаблицаЮрФизЛиц.Колонки.Добавить("ЮрФизЛицо");
				ТаблицаЮрФизЛиц.Колонки.Добавить("ОрганизацияAPI");
				
				НоваяСтрока = ТаблицаЮрФизЛиц.Добавить();
				НоваяСтрока.GLN			= GLNЮрФизЛица;
				НоваяСтрока.ЮрФизЛицо	= ЮрФизЛицоСвое;
				
				СохранитьСписокЭлементовСправочника("ЮрФизЛицаСвои",		ТаблицаЮрФизЛиц);
				
				УчетнаяЗаписьПоУмолчанию = ПолучитьКонстантуEDI("УчетнаяЗаписьПоУмолчанию");
				СтруктураПолей		= ПолучитьЭлементСправочника("УчетныеЗаписи", УчетнаяЗаписьПоУмолчанию);
				Структураполей.GLN	= GLNЮрФизЛица;
				СохранитьЭлементСправочника("УчетныеЗаписи", УчетнаяЗаписьПоУмолчанию, СтруктураПолей);
		
			КонецЕсли;
			
			Если МыТорговаяСеть Тогда
				
				ЭлементыФормы.ПанельПартнеров.ТекущаяСтраница = ЭлементыФормы.ПанельПартнеров.Страницы.СтраницаТорговойСети;
				ОбновитьСписокПартнеров();
				
			Иначе
				
				ЭлементыФормы.ПанельПартнеров.ТекущаяСтраница = ЭлементыФормы.ПанельПартнеров.Страницы.СтраницаПоставщика;
				
			КонецЕсли;
		
			УстановитьСтраницу("СведенияОПартнерах");
			
		Иначе
			
			ВывестиПредупреждение_КонтурEDI("Необходимо правильно заполнить все поля!");
		
		КонецЕсли;
		
	ИначеЕсли ПанельСтраниц.ТекущаяСтраница = ПанельСтраниц.Страницы.СтраницаСведенияОПартнерах Тогда
		
		СписокНеотмеченныхСетей = "";
		
		Для Каждого СтрокаТС ИЗ СписокЮрФизЛицТорговыхСетей.Строки Цикл
			Если СтрокаТС.Пометка И НЕ СтрокаТС.Подключена Тогда
				ЕстьПометки = Ложь;
				Для Каждого СтрокаЮФ ИЗ СтрокаТС.Строки Цикл
					Если ЗначениеЗаполнено(СтрокаЮФ.Контрагент) Тогда
						ЕстьПометки = Истина;
						Прервать;	
					КонецЕсли;
				КонецЦикла;
				
				Если НЕ ЕстьПометки Тогда
					
					СписокНеотмеченныхСетей = СписокНеотмеченныхСетей + Символы.ПС + " - " + СтрокаТС.Наименование;
					
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		Если НЕ ПустаяСтрока(СписокНеотмеченныхСетей) Тогда
			
			ВывестиПредупреждение_КонтурEDI("У следующих торговых сетей вы не указали контрагентов из вашего справочника:"+СписокНеотмеченныхСетей);
			Возврат;
			
		КонецЕсли;
		
		Если НЕ МыТорговаяСеть Тогда
		
			СохранитьТорговыеСети();
			
		КонецЕсли;
			
		УстановитьКонстантуEDI("НеПоказыватьПомощникаПриЗапуске",	Истина);
		
		НастройкиМодуля = ПолучитьНастройкиМодуля();//обновим кэш, вдруг галочку поменяли
		
		ЭтаФорма.Закрыть();
		
		//пока что принудительно запишем настройки
		ФРМНастройка = ПолучитьФорму("ФормаСервис_Настройка");
		ФРМНастройка.Открыть();
		ФРМНастройка.КнопкаВыполнитьНажатие("");
		
		ФРМСтруктураКомпании = ПолучитьФорму("ФормаСтруктураКомпании_Элемент");
		ФРМСтруктураКомпании.Открыть();
		ФРМСтруктураКомпании.ОсновныеДействияФормыОсновныеДействияФормыВыполнить("");
		
		Оповестить("КонтурEDI_НастроитьФорму");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьНастройкиССервера()
	
	НастройкиССервера = ПрочитатьНастройкиССервера(Новый Структура("Сервер,Порт,Логин,Пароль,ПассивныйРежим",Сервер,Порт,ЛогинFTP,ПарольFTP,ПассивныйРежим));
	
	//Если ЗначениеЗаполнено(НастройкиССервера.МыТорговаяСеть) Тогда
	//	МыТорговаяСеть = НастройкиССервера.МыТорговаяСеть;	
	//КонецЕсли;
	Если ЗначениеЗаполнено(НастройкиССервера.МыПоставщик) Тогда
		МыПоставщик = НастройкиССервера.МыПоставщик;
	КонецЕсли;
	Если ЗначениеЗаполнено(НастройкиССервера.ЮрФизЛицоСвое) Тогда
		ЮрФизЛицоСвое = НастройкиССервера.ЮрФизЛицоСвое;		
	КонецЕсли;
	Если ЗначениеЗаполнено(НастройкиССервера.GLNЮрФизЛица) Тогда
		GLNЮрФизЛица = НастройкиССервера.GLNЮрФизЛица;	
	КонецЕсли;
	
КонецПроцедуры	

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "КонтурEDI_ОбновитьСписокПартнеров" Тогда
		
		ОбновитьСписокПартнеров();
		
	КонецЕсли;

КонецПроцедуры

Процедура ОбновитьСписокПартнеров()
	
	СписокПартнеров.Очистить();
	
	Партнеры = ПолучитьСписокЭлементовСправочника("Партнеры");
	
	Для каждого Стр Из Партнеры Цикл
		НоваяСтрока = СписокПартнеров.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Стр);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОткрытьФормуТорговойСети()
	
	ТекСтрока = ЭлементыФормы.СписокПартнеров.ТекущиеДанные;
	Если НЕ ТекСтрока = Неопределено Тогда
		
		ОткрытьФормуЭлементаСправочника("Партнеры", ТекСтрока.Ссылка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПартнерыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ОткрытьФормуТорговойСети();
	
КонецПроцедуры

Процедура КоманднаяПанельТСОткрыть(Кнопка)
	
	ОткрытьФормуТорговойСети();
	
КонецПроцедуры

Процедура КоманднаяПанельТСДобавитьТорговуюСеть(Кнопка)
	
	ОткрытьФормуЭлементаСправочника("Партнеры");
	
КонецПроцедуры

Процедура КнопкаНазадНажатие(Элемент)
	
	ПанельСтраниц = ЭлементыФормы.ПанельСтраниц;
	
	Если ПанельСтраниц.ТекущаяСтраница = ПанельСтраниц.Страницы.СтраницаДанныеОКомпании Тогда
		
		УстановитьСтраницу("НастройкаПодключения");
		
	ИначеЕсли ПанельСтраниц.ТекущаяСтраница = ПанельСтраниц.Страницы.СтраницаСведенияОПартнерах Тогда
		
		УстановитьСтраницу("ДанныеОКомпании");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УправлениеДоступностьюПолейНастройкиПрокси()
	
	Возврат;
	//включить обратно тогда, когда будем массово переходить на API
	
	//ЭлементыФормы.ЛогинПрокси.Доступность	= ИспользуетсяПрокси;
	//ЭлементыФормы.ПарольПрокси.Доступность	= ИспользуетсяПрокси;
	
КонецПроцедуры

Процедура ИспользуетсяПроксиПриИзменении(Элемент)
	
	УправлениеДоступностьюПолейНастройкиПрокси();
	
КонецПроцедуры

Процедура ОбновитьДеревоЮрФизЛицТорговыхСетей()
	
	СписокЮрФизЛицТорговыхСетей.Строки.Очистить();
	
	ТорговыеСети = ПолучитьСписокТорговыхСетей();
	
		КоличествоНайденных = 0;
		
		Для каждого Стр ИЗ ТорговыеСети Цикл
			//Если Стр.Пометка И НЕ Стр.Подключена Тогда
				
				СтрокаТорговойСети = СписокЮрФизЛицТорговыхСетей.Строки.Добавить();
				СтрокаТорговойСети.Наименование = Стр.Наименование;
				СтрокаТорговойСети.КодСети = Стр.Код;
				
				Если Стр.Подключена Тогда
					СтрокаТорговойСети.Подключена = Стр.Подключена;
					СтрокаТорговойСети.Пометка = Истина;
				КонецЕсли;
				
				//ДанныеПоТС = ПолучитьСтруктуруДанныхТорговойСети(Стр.Код);
				//
				//Если НЕ ДанныеПоТС = Неопределено Тогда
				//	
				//	ЮрФизЛицаТС = ДанныеПоТС.ЮрФизЛица;
				//	
				//	Для каждого СтрЮФ Из ЮрФизЛицаТС Цикл
				//		
				//		СтрокаКонтрагента = СтрокаТорговойСети.Строки.Добавить();
				//		СтрокаКонтрагента.Наименование = СтрЮФ.Наименование;
				//		СтрокаКонтрагента.ИНН = СтрЮФ.ИНН;
				//		СтрокаКонтрагента.КПП = СтрЮФ.КПП;
				//		СтрокаКонтрагента.GLN = СтрЮФ.GLN;
				//		
				//		СтрокаКонтрагента.Контрагент = НайтиЮрФизЛицоСтороннееПоРеквизитам(СтрЮФ.ИНН,СтрЮФ.КПП);
				//		
				//		Если ЗначениеЗаполнено(СтрокаКонтрагента.Контрагент) Тогда
				//			КоличествоНайденных=КоличествоНайденных+1;
				//		КонецЕсли;
				//		
				//	КонецЦикла;
				//	
				//КонецЕсли;
				
			//КонецЕсли;
		КонецЦикла;
	
КонецПроцедуры

Процедура СписокЮрФизЛицТорговыхСетейПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ЗначениеЗаполнено(ДанныеСтроки.КодСети) Тогда
	
		Если НЕ ДанныеСтроки.Подключена Тогда
			ОформлениеСтроки.Ячейки.Галочка.УстановитьФлажок(ДанныеСтроки.Пометка);
		КонецЕсли;	
			
		ОформлениеСтроки.Шрифт = Новый Шрифт(ОформлениеСтроки.Шрифт,,,Истина);
		
	КонецЕсли;
	
	ЦветХорошо = Новый Цвет(220,250,220);
	ЦветПлохо  = WebЦвета.ТусклоРозовый;
	
	Если НЕ ЗначениеЗаполнено(ДанныеСтроки.КодСети) Тогда
		
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Контрагент) Тогда
			ЦветКонтрагента = ЦветПлохо;
		Иначе
			ЦветКонтрагента = ЦветХорошо;
		КонецЕсли;
			
		ОформлениеСтроки.Ячейки.Контрагент.ЦветФона = ЦветКонтрагента;
		
	КонецЕсли;
	
	Если ДанныеСтроки.Подключена Тогда
		
		ОформлениеСтроки.Ячейки.Галочка.ТолькоПросмотр = Истина;
		ОформлениеСтроки.ЦветФона = WebЦвета.ШелковыйОттенок;
		
		ОформлениеСтроки.Ячейки.Наименование.УстановитьТекст(СокрЛП(ДанныеСтроки.Наименование) + " (соединение настроено)");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СписокЮрФизЛицТорговыхСетейПриИзмененииФлажка(Элемент, Колонка)
	
	ТекСтрока = ЭлементыФормы.СписокЮрФизЛицТорговыхСетей.ТекущаяСтрока;
	
	Если Не ТекСтрока = Неопределено Тогда
		
		ТекСтрока.Пометка = Не ТекСтрока.Пометка;
		
		Если ТекСтрока.Пометка Тогда
			
			ДанныеПоТС = ПолучитьСтруктуруДанныхТорговойСети(ТекСтрока.КодСети);
			Если НЕ ДанныеПоТС = Неопределено Тогда
				ЮрФизЛицаТС = ДанныеПоТС.ЮрФизЛица;
				Для Каждого СтрЮФ Из ЮрФизЛицаТС Цикл
					СтрокаКонтрагента = ТекСтрока.Строки.Добавить();
					СтрокаКонтрагента.Наименование = СтрЮФ.Наименование;
					СтрокаКонтрагента.ИНН = СтрЮФ.ИНН;
					СтрокаКонтрагента.КПП = СтрЮФ.КПП;
					СтрокаКонтрагента.GLN = СтрЮФ.GLN;
					СтрокаКонтрагента.Контрагент = НайтиЮрФизЛицоСтороннееПоРеквизитам(СтрЮФ.ИНН,СтрЮФ.КПП);;
				КонецЦикла;
			КонецЕсли;
			
			ЭлементыФормы.СписокЮрФизЛицТорговыхСетей.Развернуть(ТекСтрока);
			
		Иначе
			ТекСтрока.Строки.Очистить();
			ЭлементыФормы.СписокЮрФизЛицТорговыхСетей.Свернуть(ТекСтрока);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СписокЮрФизЛицТорговыхСетейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель)
	
	Отказ = Истина;
	
КонецПроцедуры

Процедура СписокЮрФизЛицТорговыхСетейПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

Процедура СписокЮрФизЛицТорговыхСетейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущаяСтрока = ЭлементыФормы.СписокЮрФизЛицТорговыхСетей.ТекущиеДанные;
	
	Если НЕ ТекущаяСтрока = Неопределено Тогда
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Контрагент) Тогда
			ТекущаяСтрока.Контрагент = ПолучитьПустуюСсылкуОбъекта("ЮрФизЛицоСтороннее");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура СписокЮрФизЛицТорговыхСетейВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ТекущаяСтрока = ЭлементыФормы.СписокЮрФизЛицТорговыхСетей.ТекущиеДанные;
	
	Если НЕ ТекущаяСтрока = Неопределено Тогда
		Если ЗначениеЗаполнено(ТекущаяСтрока.КодСети) Тогда
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

Процедура УстановитьТипЗначенияПоля(ИмяПоля,Тип1С)
	
	ТипПоля = ПолучитьТипЗначенияОбъекта(Тип1С);
	
	Если ТипПоля = Неопределено Тогда
		
		Сообщить("Не задан тип объекта 1С для поля с типом "+Тип1С);
		
	Иначе	
		
		ЭлементыФормы[ИмяПоля].ОграничениеТипа = Новый ОписаниеТипов(ТипПоля);
		
		Если НЕ ЗначениеЗаполнено(ЭтаФорма[ИмяПоля]) Тогда
			
			ЭтаФорма[ИмяПоля] = ПолучитьПустуюСсылкуОбъекта(Тип1С);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьТипЗначенияКолонки(Колонка,Тип1С)
	
	ПолеФормы	= Колонка.ЭлементУправления;
	ТипПоля		= ПолучитьТипЗначенияОбъекта(Тип1С);
	
	Если ТипПоля = Неопределено Тогда
		
		Сообщить("Не задан тип объекта 1С для поля с типом "+Тип1С);
		
	Иначе	
		
		ПолеФормы.ОграничениеТипа = Новый ОписаниеТипов(ТипПоля);
		
	КонецЕсли;
	
КонецПроцедуры

Функция СохранитьТорговыеСети()
	
	Для Каждого СтрокаТорговойСети ИЗ СписокЮрФизЛицТорговыхСетей.Строки Цикл
		
		Если СтрокаТорговойСети.Пометка И НЕ СтрокаТорговойСети.Подключена Тогда
			
			ТаблицаКонтрагентов = Новый ТаблицаЗначений;
			ТаблицаКонтрагентов.Колонки.Добавить("GLN");
			ТаблицаКонтрагентов.Колонки.Добавить("ЮрФизЛицо");
			
			Для Каждого СтрокаКонтрагента ИЗ СтрокаТорговойСети.Строки Цикл
				
				Если ЗначениеЗаполнено(СтрокаКонтрагента.Контрагент) Тогда
					
					НоваяСтрока = ТаблицаКонтрагентов.Добавить();
					
					НоваяСтрока.GLN			= СокрЛП(СтрокаКонтрагента.GLN);
					НоваяСтрока.ЮрФизЛицо	= СтрокаКонтрагента.Контрагент;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если ТаблицаКонтрагентов.Количество()>0 Тогда
				
				СохранитьТорговуюСеть(СокрЛП(СтрокаТорговойСети.КодСети),ТаблицаКонтрагентов);
				
				Форма = ПолучитьФорму("ФормаСервис_ОбновлениеДанныхПартнера");
				Форма.Параметры = Новый Структура("КодСети", СокрЛП(СтрокаТорговойСети.КодСети));
				Форма.ОткрытьМодально();
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции

Процедура КнопкаАвтонастройкаТорговыхСетейНажатие(Элемент)
	// Вставить содержимое обработчика.
	
	УчетныеЗаписи = ПолучитьСписокЭлементовСправочника("УчетныеЗаписи");
	ОбновитьСписокТорговыхСетейССервера();
	
	//ОбновитьСписокПартнеров();
	
	ОбновитьДеревоЮрФизЛицТорговыхСетей();
	
	Предупреждение("Торговые сети добавлены. 
	|После закрытия стартового помощника проставьте в них соответствия юр.лиц и точек доставки.
	|Это можно сделать в меню ""Торговые сети"".");
	
КонецПроцедуры
