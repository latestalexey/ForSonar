Процедура УстановитьТипПоля1С(ИмяНаФорме,Тип1С)
	
	ПолеФормы	= ЭлементыФормы[ИмяНаФорме];
	ТипПоля		= ПолучитьТипЗначенияОбъекта(Тип1С);
			
	Если ТипПоля = Неопределено Тогда
		
		Сообщить("Не задан тип объекта 1С для поля с типом "+Тип1С);
		
	Иначе	
		
		ЭлементыФормы[ИмяНаФорме].ОграничениеТипа = Новый ОписаниеТипов(ТипПоля);
		
		Если НЕ ЗначениеЗаполнено(ЭтаФорма[ИмяНаФорме]) Тогда
			
			ЭтаФорма[ИмяНаФорме] = ПолучитьПустуюСсылкуОбъекта(Тип1С);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Кнопка)

	Если НЕ ПроверитьЗначенияФормы() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПолей = СоздатьСтруктуруСправочникаДляСохранения();

	СохранитьЭлементСправочника("ТранспортныеЯщики", Ссылка, СтруктураПолей);
	
	Оповестить("КонтурEDI_ОбновитьСписок_ТранспортныеЯщики");
		
	Соединение = Неопределено;//???
	
	ЭтаФорма.Закрыть(Истина);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ПриОткрытииФормы(ЭтаФорма);
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		
		СтруктураПолей = ПолучитьЭлементСправочника("ТранспортныеЯщики", Ссылка);
		
		Если СтруктураПолей <> Неопределено Тогда
		
			id 										= СтруктураПолей.id;
			Наименование 							= СтруктураПолей.Наименование;
			ДатаИдентификаторПоследнегоСообщения 	= СтруктураПолей.lastEventId;
			ОрганизацияAPI 							= СтруктураПолей.ОрганизацияAPI;
			НеАктивный	 							= СтруктураПолей.НеАктивный;
			ОрганизацияПредставление 				= ПолучитьПредставлениеЭлементаСправочника(ОрганизацияAPI);
			Тестовый	 							= СтруктураПолей.Тестовый;
			GLNЯщика	 							= СтруктураПолей.GLNЯщика;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Оповестить("КонтурEDI_АктивизироватьФормуОшибок","Открытие",ЭтаФорма);

КонецПроцедуры

Функция ПроверитьЗначенияФормы()
	
	// 1. инициализируем таблицу вывода ошибок
	ТаблицаОшибок = ИнициализироватьТаблицуОшибок();
	
	// 2. передать структуру для проверки
	//ПроверитьПолеФормы(ТаблицаОшибок, Логин,	"Строка50", Истина, "Логин");
	//ПроверитьПолеФормы(ТаблицаОшибок, Пароль, 	"Строка50",	Истина, "Пароль");
	
	Если ТаблицаОшибок.Количество() > 0 Тогда
		
		//Если ПустаяСтрока(Логин) Тогда
		//	
		//	ТекстЗаголовка = "При заполнении учетной записи найдены ошибки.";
		//	
		//Иначе
		//	
		//	ТекстЗаголовка = "При заполнении учетной записи """+СокрЛП(Логин)+""" найдены ошибки.";
		//	
		//КонецЕсли;
		//	
		//ОткрытьФормуВыводаОшибок(ТекстЗаголовка,ТаблицаОшибок,ЭтаФорма);
		
		Возврат Ложь;
		
	Иначе
		
		Возврат Истина;
		
	КонецЕсли;
	
КонецФункции

Процедура ПриЗакрытии()
	
	Оповестить("КонтурEDI_АктивизироватьФормуОшибок","Закрытие",ЭтаФорма);

КонецПроцедуры

Функция  СоздатьСтруктуруСправочникаДляСохранения()
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("id", 									id);
	СтруктураПолей.Вставить("Наименование", 						id);
	СтруктураПолей.Вставить("ОрганизацияAPI",						ОрганизацияAPI);
	СтруктураПолей.Вставить("lastEventId",							ДатаИдентификаторПоследнегоСообщения);
	СтруктураПолей.Вставить("НеАктивный",							НеАктивный);
	СтруктураПолей.Вставить("Тестовый",								Тестовый);
	СтруктураПолей.Вставить("GLNЯщика",								GLNЯщика);
	
	Возврат СтруктураПолей;
КонецФункции	

Процедура ДатаИдентификаторПоследнегоСообщенияНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	_Дата = ТекущаяДата();
	Если ВвестиДату(_Дата,,ЧастиДаты.Дата) Тогда
		ДатаИдентификаторПоследнегоСообщения = Формат(_Дата,"ДФ=yyyyMMdd");
	КонецЕсли;
КонецПроцедуры
