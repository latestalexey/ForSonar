Перем ТекущееСоответствие; //+
Перем ЕстьАртикул;
Перем мИмяСправочникаНоменклатура;

Процедура КнопкаВыполнитьНажатие(Кнопка)

	Если Не ЗначениеЗаполнено(GTIN) И Не ЗначениеЗаполнено(КодТовараПартнера) Тогда
		Предупреждение("Необходимо указать GTIN или код товара в торговой сети!");
		Возврат;
	КонецЕсли;
	
	сч = 0;
	Для каждого Стр Из СписокНоменклатуры Цикл
		сч = сч+1;
		
		Если НЕ ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			ВывестиПредупреждение_КонтурEDI("В строке "+СокрЛП(сч)+" не указана номенклатура!");
			Возврат;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Стр.ЕдиницаИзмерения) Тогда
			ВывестиПредупреждение_КонтурEDI("В строке "+СокрЛП(сч)+" не указана единица измерения!");
			Возврат;
		КонецЕсли;
		
		Если (ЗначениеЗаполнено(Стр.КоэффициентEDIВ1С)
			или ЗначениеЗаполнено(Стр.ДействиеПересчета))
			И Не ЗначениеЗаполнено(Стр.ЕдиницаEDI) Тогда
			ВывестиПредупреждение_КонтурEDI("В строке "+СокрЛП(сч)+" не указана единица измерения EDI!");
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	ПроверитьНаличиеОсновнойНоменклатуры();
	
	РезультатСохранения = СоответствиеТоваров_Сохранить(СписокНоменклатуры,GTIN,КодТовараПартнера,Наименование,Партнер,ТекущееСоответствие);//+
	
	Если ЗначениеЗаполнено(РезультатСохранения) и РезультатСохранения.ТаблицаОшибок.Количество()=0 Тогда
		ЭтаФорма.Закрыть();
	КонецЕсли;
		
КонецПроцедуры

Процедура ПроверитьНаличиеОсновнойНоменклатуры()
	
	Если СписокНоменклатуры.Количество()>0 Тогда
		
		НайденнаяСтрока = СписокНоменклатуры.Найти(Истина,"Основной");
		
		Если НайденнаяСтрока = Неопределено Тогда
			
			СписокНоменклатуры[0].Основной = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельСоответствующейНоменклатурыДобавить(Кнопка)

	ВыбраннаяНоменклатура = Справочники[мИмяСправочникаНоменклатура].ПустаяСсылка();  
	
	Если ВвестиЗначение(ВыбраннаяНоменклатура) Тогда
		Если ЗначениеЗаполнено(ВыбраннаяНоменклатура) Тогда
			НоваяСтрока = СписокНоменклатуры.Добавить();
			НоваяСтрока.Номенклатура = ВыбраннаяНоменклатура;
			
			ИмяСправочникаХарактеристики = ПолучитьТипЗначенияОбъекта("ХарактеристикаНоменклатуры",,Истина);
			Если ИмяСправочникаХарактеристики<>Неопределено Тогда
				НоваяСтрока.ХарактеристикаНоменклатуры = Справочники[ИмяСправочникаХарактеристики].ПустаяСсылка();
			КонецЕсли;
			
			Если ИмяКонфигурации1С = "ТКПТ" Тогда
				НоваяСтрока.ЕдиницаИзмерения = ВыбраннаяНоменклатура.ОсновнаяЕдиницаИзмерения;
				
			ИначеЕсли ИмяКонфигурации1С = "ДалионУМ" Тогда
				НоваяСтрока.ЕдиницаИзмерения = ВыбраннаяНоменклатура.БазоваяЕдиницаИзмерения;		
				
			ИначеЕсли НЕ ИмяКонфигурации1С = "БП" Тогда
				НоваяСтрока.ЕдиницаИзмерения = ВыбраннаяНоменклатура.ЕдиницаХраненияОстатков;

			Иначе
				НоваяСтрока.ЕдиницаИзмерения = ВыбраннаяНоменклатура.БазоваяЕдиницаИзмерения;
			КонецЕсли;
			
			ИмяСправочникаКонтрагенты	= ПолучитьТипЗначенияОбъекта("ЮрФизЛицоСтороннее",,Истина);
			ИмяСправочникаДоговоры		= ПолучитьТипЗначенияОбъекта("Договор",,Истина);
	
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.Контрагент) И НЕ ИмяСправочникаКонтрагенты = Неопределено Тогда
				НоваяСтрока.Контрагент = Справочники[ИмяСправочникаКонтрагенты].ПустаяСсылка();
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.Договор) И НЕ ИмяСправочникаДоговоры = Неопределено Тогда
				НоваяСтрока.Договор = Справочники[ИмяСправочникаДоговоры].ПустаяСсылка();
			КонецЕсли;

			ПроверитьНедобавленныеТовары();
			
		КонецЕсли;
	КонецЕсли;
			
КонецПроцедуры

Процедура КоманднаяПанельСоответствующейНоменклатурыУдалить(Кнопка)
	
	ТекСтрока = ЭлементыФормы.СписокНоменклатуры.ТекущиеДанные;
	Если НЕ ТекСтрока = Неопределено Тогда
		СписокНоменклатуры.Удалить(ТекСтрока);
		ПроверитьНаличиеОсновнойНоменклатуры();	
		ПроверитьНедобавленныеТовары();	
	КонецЕсли;
	
КонецПроцедуры

Процедура СписокНоменклатурыПослеУдаления(Элемент)
	
	ПроверитьНедобавленныеТовары();	
	
КонецПроцедуры

Процедура КоманднаяПанельСоответствующейНоменклатурыУстановитьОсновным(Кнопка)

	СписокНоменклатуры.ЗаполнитьЗначения(Ложь,"Основной");	
	
	ТекСтрока = ЭлементыФормы.СписокНоменклатуры.ТекущиеДанные;
	
	Если НЕ ТекСтрока = Неопределено Тогда
		
		ТекСтрока.Основной = Истина;
		
	КонецЕсли;
	
	ПроверитьНаличиеОсновнойНоменклатуры();	
	
КонецПроцедуры

Процедура УстановитьТипКолонки1С(ИмяПоля,ИмяТипа = "")
	
	Если ИмяТипа = "" Тогда
		ИмяТипа = ИмяПоля;
	КонецЕсли;
	
	ПолеФормы	= ЭлементыФормы.СписокНоменклатуры.Колонки[ИмяПоля].ЭлементУправления;
	ТипПоля		= ПолучитьТипЗначенияОбъекта(ИмяТипа);
		
	Если НЕ ТипПоля = Неопределено Тогда
			
		ПолеФормы.ОграничениеТипа = Новый ОписаниеТипов(ТипПоля);
			
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьТоварыПоКодуШтрихкоду()
	
	НедобавленныеТовары = Новый ТаблицаЗначений;
	НедобавленныеТовары.Колонки.Добавить("Код",,"Код");
	
	ЕстьАртикул = (Метаданные.Справочники[мИмяСправочникаНоменклатура].Реквизиты.Найти("Артикул")<>Неопределено);
	Если ЕстьАртикул Тогда
		НедобавленныеТовары.Колонки.Добавить("Артикул",,"Артикул");
	КонецЕсли;	
	
	НедобавленныеТовары.Колонки.Добавить("Номенклатура",,"Номенклатура");
	НедобавленныеТовары.Колонки.Добавить("ХарактеристикаНоменклатуры",,"Характеристика номенклатуры");
	НедобавленныеТовары.Колонки.Добавить("ЕдиницаИзмерения",,"Единица измерения");
	
	Если ЗначениеЗаполнено(GTIN) Тогда
		
		НайденныеТоварыПоШК = НайтиТоварыПоШтрихкоду(СокрЛП(GTIN));
		Если ТипЗнч(НайденныеТоварыПоШК) = Тип("ТаблицаЗначений") Тогда
			Для каждого Стр Из НайденныеТоварыПоШК Цикл
				Нашли = Ложь;
				// сверим в лоб, чтобы не перемудрить с типами колонок и их значениями
				Для Каждого ТекСтр Из СписокНоменклатуры Цикл
					Если Стр.Номенклатура = ТекСтр.Номенклатура Тогда
						Если Стр.ЕдиницаИзмерения = ТекСтр.ЕдиницаИзмерения Тогда
							Нашли = Истина;
							Если ЗначениеЗаполнено(Стр.ХарактеристикаНоменклатуры) И ЗначениеЗаполнено(ТекСтр.ХарактеристикаНоменклатуры) Тогда
								Если НЕ Стр.ХарактеристикаНоменклатуры = ТекСтр.ХарактеристикаНоменклатуры Тогда
									Нашли = Ложь;
								КонецЕсли;
							ИначеЕсли ЗначениеЗаполнено(Стр.ХарактеристикаНоменклатуры) ИЛИ ЗначениеЗаполнено(ТекСтр.ХарактеристикаНоменклатуры) Тогда
								Нашли = Ложь;
							КонецЕсли;
						КонецЕсли;	
					КонецЕсли;
				КонецЦикла;
				Если Нашли = Ложь Тогда
					НоваяСтрока = НедобавленныеТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока,Стр);
					НоваяСтрока.Код = НоваяСтрока.Номенклатура.Код;
					
					Если ЕстьАртикул Тогда
						НоваяСтрока.Артикул = НоваяСтрока.Номенклатура.Артикул;
					КонецЕсли;	
					
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;		
	
	//сеть указала internalSupplierCode, попробуем найти этот товар в справочнике поставщика по его коду
	Если ЗначениеЗаполнено(КодТовараВнутренний) 
		И ЗначениеЗаполнено(Справочники[мИмяСправочникаНоменклатура].НайтиПоКоду(КодТовараВнутренний))
	Тогда
	
		Номенклатура = Справочники[мИмяСправочникаНоменклатура].НайтиПоКоду(КодТовараВнутренний);
		Код 		 = Номенклатура.Код;
		Артикул 	 = "";
		Если ЕстьАртикул Тогда
			Артикул = Номенклатура.Артикул;
		КонецЕсли;	
		
		//пройдемся по характеристикам и единицам измерения 
		МассивХаракеристикНоменклатуры 	= Новый Массив;
		МассивЕдиницИзмерения 			= Новый Массив;
		Если НЕ ИмяКонфигурации1С = "БП" Тогда
			ИмяРеквизитаВестиУчетПоХарактеристикам = ?(ИмяКонфигурации1С = "ДалионУМ", "ИспользоватьХарактеристикиНоменклатуры", "ВестиУчетПоХарактеристикам");
			Если Номенклатура[ИмяРеквизитаВестиУчетПоХарактеристикам] = Истина Тогда
				ВыборкаХарактеристик = Справочники.ХарактеристикиНоменклатуры.Выбрать(,Номенклатура,,);
				Пока ВыборкаХарактеристик.Следующий() Цикл
					МассивХаракеристикНоменклатуры.Добавить(ВыборкаХарактеристик.Ссылка);
				КонецЦикла;
			Иначе
				МассивХаракеристикНоменклатуры.Добавить(Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
			КонецЕсли;
			ВыборкаЕдиницИзмерения = Справочники.ЕдиницыИзмерения.Выбрать(,Номенклатура,,);
			Пока ВыборкаЕдиницИзмерения.Следующий() Цикл
				МассивЕдиницИзмерения.Добавить(ВыборкаЕдиницИзмерения.Ссылка);	
			КонецЦикла;
		Иначе
			МассивЕдиницИзмерения.Добавить(Номенклатура.БазоваяЕдиницаИзмерения);
		КонецЕсли;
		
		//заполним полный набор
		Для Каждого ЕИ Из МассивЕдиницИзмерения Цикл
			Если Не МассивХаракеристикНоменклатуры.Количество() = 0 Тогда
				Для Каждого ХН Из МассивХаракеристикНоменклатуры Цикл
					НоваяСтрока = НедобавленныеТовары.Добавить();
					НоваяСтрока.Код							= Код;
					НоваяСтрока.Артикул						= Артикул;
					НоваяСтрока.Номенклатура 				= Номенклатура;
					НоваяСтрока.ХарактеристикаНоменклатуры	= ХН;
					НоваяСтрока.ЕдиницаИзмерения			= ЕИ;
				КонецЦикла;
			Иначе
				НоваяСтрока = НедобавленныеТовары.Добавить();
				НоваяСтрока.Код							= Код;
				НоваяСтрока.Артикул						= Артикул;
				НоваяСтрока.Номенклатура 				= Номенклатура;
				НоваяСтрока.ЕдиницаИзмерения			= ЕИ;
			КонецЕсли;
			КонецЦикла;
		
		//исключим уже добавленные позиции списка номенклатуры
		Для Каждого СтрокаСписка Из СписокНоменклатуры Цикл
			Отбор = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры,ЕдиницаИзмерения", СтрокаСписка.Номенклатура,СтрокаСписка.ХарактеристикаНоменклатуры,СтрокаСписка.ЕдиницаИзмерения);
			НайденныеСтроки = НедобавленныеТовары.НайтиСтроки(Отбор);
			Для Каждого Элемент Из НайденныеСтроки Цикл
				НедобавленныеТовары.Удалить(Элемент);
			КонецЦикла;
		КонецЦикла;		
		
	КонецЕсли;
	
	Возврат НедобавленныеТовары;
	
КонецФункции

Процедура ПриОткрытии()
	
	//+
	ТекущееСоответствие = Новый Структура;
	ТекущееСоответствие.Вставить("GTIN",				GTIN);
	ТекущееСоответствие.Вставить("КодТовараПартнера",	КодТовараПартнера);
	//-
	
	УстановитьТипКолонки1С("Номенклатура");
	УстановитьТипКолонки1С("ХарактеристикаНоменклатуры");
	УстановитьТипКолонки1С("ЕдиницаИзмерения");
	УстановитьТипКолонки1С("Контрагент","ЮрФизЛицоСтороннее");
	УстановитьТипКолонки1С("Договор");

	ИмяСправочникаКонтрагенты = ПолучитьТипЗначенияОбъекта("ЮрФизЛицоСтороннее",,Истина);
	ИмяСправочникаДоговоры = ПолучитьТипЗначенияОбъекта("Договор",,Истина);
	
	ЭлементыФормы.ТорговаяСеть.Заголовок = ПолучитьПредставлениеЭлементаСправочника(Партнер);
	
	СоответствиеТоваров = СоответствиеТоваров_НайтиНоменклатуру(GTIN,КодТовараПартнера,Партнер);
	
	НастроитьЭлементыПересчетаФормы();
	
	ИмяСправочникаХарактеристики = ПолучитьТипЗначенияОбъекта("ХарактеристикаНоменклатуры",,Истина);
	
	Если ЗначениеЗаполнено(СоответствиеТоваров) Тогда
		
		Для каждого СтрокаСоответствия Из СоответствиеТоваров Цикл
			
			НоваяСтрока = СписокНоменклатуры.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаСоответствия);
			
			Если НЕ ЗначениеЗаполнено(СтрокаСоответствия.ХарактеристикаНоменклатуры) 
				И ИмяСправочникаХарактеристики<>Неопределено Тогда
				
				НоваяСтрока.ХарактеристикаНоменклатуры = Справочники[ИмяСправочникаХарактеристики].ПустаяСсылка();
				
			КонецЕсли;
			
			ЗаполнитьРеквизитыПересчетаКорректно(НоваяСтрока, СтрокаСоответствия);

			Если НЕ ЗначениеЗаполнено(НоваяСтрока.Контрагент) И НЕ ИмяСправочникаКонтрагенты = Неопределено Тогда
				НоваяСтрока.Контрагент = Справочники[ИмяСправочникаКонтрагенты].ПустаяСсылка();
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.Договор) И НЕ ИмяСправочникаДоговоры = Неопределено Тогда
				НоваяСтрока.Договор = Справочники[ИмяСправочникаДоговоры].ПустаяСсылка();
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ПроверитьНаличиеОсновнойНоменклатуры();	
	
	ПроверитьНедобавленныеТовары();
	
	ПриОткрытииФормы(ЭтаФорма);
	
	Если ПолучитьЗначениеСвойстваОбъектаEDI(Партнер, "СинхронизироватьТоварыТолькоПоGTIN") = Истина ТОгда
		ЭлементыФормы.НадписьЕстьОсобенности.Видимость = Истина;
		ЭлементыФормы.НадписьКодТовараПартнера.Картинка = ПолучитьКартинкуEDI("ЭлементФормы","КартинкаОтвязатьСообщение");
	ИначеЕсли ПолучитьЗначениеСвойстваОбъектаEDI(Партнер, "СинхронизироватьТоварыТолькоПоКодуПартнера") = Истина Тогда
		ЭлементыФормы.НадписьЕстьОсобенности.Видимость = Истина;
		ЭлементыФормы.НадписьGTIN.Картинка = ПолучитьКартинкуEDI("ЭлементФормы","КартинкаОтвязатьСообщение");
	КонецЕсли;	
	
	Если ПолучитьЗначениеСвойстваОбъектаEDI(Партнер, "НесколькоТоваровСетиНаОдинТоварПоставщика") = Истина Тогда
		ЭлементыФормы.СписокНоменклатуры.Колонки.Контрагент.Видимость = Истина;
		ЭлементыФормы.СписокНоменклатуры.Колонки.Договор.Видимость = Истина;
	КонецЕсли;
		
	// Автотесты
	Если ЗначениеЗаполнено(ПараметрыАвтотестирования) Тогда

		ПодключитьОбработчикОжидания("ЗаписатьНастройкиАвтотестирования",0.1,Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьНастройкиАвтотестирования()
	
	КнопкаВыполнитьНажатие("");
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыПересчетаКорректно(СтрокаНаФорме, СтрокаСоответствия)
	
	Если Не ЗначениеЗаполнено(СтрокаСоответствия.КоэффициентEDIВ1С) Тогда
		СтрокаНаФорме.КоэффициентEDIВ1С = 0;
	Иначе
		СтрокаНаФорме.КоэффициентEDIВ1С = Макс(СтрокаСоответствия.КоэффициентEDIВ1С, -СтрокаСоответствия.КоэффициентEDIВ1С);
	КонецЕсли;
	
	СтрокаНаФорме.ДействиеПересчета = "умножить";
	
	Если ЗначениеЗаполнено(СтрокаСоответствия.КоэффициентEDIВ1С)
		И СтрокаСоответствия.КоэффициентEDIВ1С < 0 Тогда
		СтрокаНаФорме.ДействиеПересчета = "разделить";				
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтрокаНаФорме.ЕдиницаEDI) Тогда
		СтрокаНаФорме.ЕдиницаEDI = "";		 
	КонецЕсли;
			
	//не будем показывать пользователю лишнего
	Если СтрокаНаФорме.ЕдиницаEDI = "" Тогда
		СтрокаНаФорме.ДействиеПересчета = "";
		СтрокаНаФорме.КоэффициентEDIВ1С = 0;
	КонецЕсли;
		
КонецПроцедуры

Процедура НастроитьЭлементыПересчетаФормы()
	
	СписокДействийПересчета = Новый СписокЗначений;
	СписокДействийПересчета.Добавить("умножить",  "умножить");
	СписокДействийПересчета.Добавить("разделить", "разделить");
	ЭлементыФормы.СписокНоменклатуры.Колонки.ДействиеПересчета.ЭлементУправления.СписокВыбора = СписокДействийПересчета;
	СписокЕдиницEDI = ПолучитьСписокЕдиницEDI();
	ЭлементыФормы.СписокНоменклатуры.Колонки.ЕдиницаEDI.ЭлементУправления.СписокВыбора = СписокЕдиницEDI;
	
КонецПроцедуры

Процедура ПроверитьНедобавленныеТовары()
	
    НедобавленныеТовары = ПолучитьТоварыПоКодуШтрихкоду();
	
	Если НедобавленныеТовары.Количество() = 0 Тогда
		ЭлементыФормы.ПанельНайденныхПоШтрихкоду.Свертка = РежимСверткиЭлементаУправления.Низ;
	Иначе
		ЭлементыФормы.ПанельНайденныхПоШтрихкоду.Свертка = РежимСверткиЭлементаУправления.Нет;
	КонецЕсли;
	
КонецПроцедуры

Процедура СписокНоменклатурыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Основной Тогда
		
		ОформлениеСтроки.Шрифт = Новый Шрифт(ОформлениеСтроки.Шрифт,,,Истина);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеСтроки.Номенклатура) Тогда
		ОформлениеСтроки.Ячейки.Код.УстановитьТекст(""+ДанныеСтроки.Номенклатура.Код);
		Если ЕстьАртикул Тогда
			ОформлениеСтроки.Ячейки.Артикул.УстановитьТекст(""+ДанныеСтроки.Номенклатура.Артикул);
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

Процедура СписокНоменклатурыЕдиницаИзмеренияНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ДействиеФормыНачалоВыбора("ФормаСопоставленияНоменклатуры",ЭлементыФормы,Элемент,"ЕдиницаИзмерения",СтандартнаяОбработка);

КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
		
	Если НЕ ЗначениеЗаполнено(Партнер) Тогда
		ВывестиПредупреждение_КонтурEDI("Для установки соответствий номенклатуры в форму должен быть передан партнер.");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ПартнерЭлемент = ПолучитьЭлементСправочника("Партнеры",Партнер);
	
КонецПроцедуры

Процедура СписокНоменклатурыПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ = Истина;
КонецПроцедуры

Процедура НадписьДобавитьНажатие(Элемент)
	
    НедобавленныеТовары = ПолучитьТоварыПоКодуШтрихкоду();
	ВыбраннаяСтрока = НедобавленныеТовары.ВыбратьСтроку("Данная номенклатура будет добавлена в соответствие:");
	Если НЕ ВыбраннаяСтрока = Неопределено Тогда
		
		НоваяСтрока = СписокНоменклатуры.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ВыбраннаяСтрока);
		
		ПроверитьНаличиеОсновнойНоменклатуры();	
		ПроверитьНедобавленныеТовары();
		
	КонецЕсли;
		
КонецПроцедуры

Процедура СписокНоменклатурыНоменклатураПриИзменении(Элемент)
	
	ТекСтрока = ЭлементыФормы.СписокНоменклатуры.ТекущиеДанные;
	
	ИмяСправочникаХарактеристики = ПолучитьТипЗначенияОбъекта("ХарактеристикаНоменклатуры",,Истина);
	ИмяСправочникаЕдиницаИзмерения = ПолучитьТипЗначенияОбъекта("ЕдиницаИзмерения",,Истина);
	
	Если ИмяСправочникаХарактеристики<>Неопределено Тогда
		ТекСтрока.ХарактеристикаНоменклатуры = Справочники[ИмяСправочникаХарактеристики].ПустаяСсылка();
	КонецЕсли;
	Если ИмяСправочникаЕдиницаИзмерения<>Неопределено Тогда
		ТекСтрока.ЕдиницаИзмерения = Справочники[ИмяСправочникаЕдиницаИзмерения].ПустаяСсылка();
	КонецЕсли;
	
	//Если ИмяКонфигурации1С = "БП" Тогда
	//	ТекСтрока.ЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.ПустаяСсылка();
	//Иначе
	//	ТекСтрока.ХарактеристикаНоменклатуры = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	//	ТекСтрока.ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
	//КонецЕсли;
	
КонецПроцедуры

Процедура СписокНоменклатурыХарактеристикаНоменклатурыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	//ограничиваем форму выбора по Номенклатуре
	ТекСтрока = ЭлементыФормы.СписокНоменклатуры.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекСтрока.Номенклатура) Тогда
		Если Не ТипЗнч(Элемент.Значение) = Тип("Неопределено") Тогда
			СтандартнаяОбработка = Ложь;
			ФормаВыбора = Справочники[Метаданные.НайтиПоТипу(ТипЗнч(Элемент.Значение)).Имя].ПолучитьФормуВыбора();
			ФормаВыбора.ПараметрВыборПоВладельцу = ТекСтрока.Номенклатура;
			ВыбранноеЗначение = ФормаВыбора.ОткрытьМодально();
			Если Не ВыбранноеЗначение = Неопределено Тогда 
				ТекСтрока.ХарактеристикаНоменклатуры = ВыбранноеЗначение;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ВывестиПредупреждение_КонтурEDI("В текущей строке не выбрана номенклатура");
	КонецЕсли;
	
КонецПроцедуры

Процедура НадписьЕстьОсобенностиНажатие(Элемент)
	
	Если ПолучитьЗначениеСвойстваОбъектаEDI(Партнер, "СинхронизироватьТоварыТолькоПоGTIN") = Истина Тогда 
		ВывестиПредупреждение_КонтурEDI("У этой торговой сети настроена синхронизация товаров только по GTIN.
		|В исходящих сообщениях код товара покупателя будет взят из ORDERS или RECADV.");	
	ИначеЕсли ПолучитьЗначениеСвойстваОбъектаEDI(Партнер, "СинхронизироватьТоварыТолькоПоКодуПартнера") = Истина  Тогда
		ВывестиПредупреждение_КонтурEDI("У этой торговой сети настроена синхронизация товаров только по КОДУ ПАРТНЕРА.
		|При записи соответствия GTIN не будет сохранен. В исходящих сообщениях GTIN будет отправлен из соответствия.");	
	КонецЕсли;
	
КонецПроцедуры

мИмяСправочникаНоменклатура = ПолучитьТипЗначенияОбъекта("Номенклатура",,Истина);
ЕстьАртикул = Метаданные.Справочники[мИмяСправочникаНоменклатура].Реквизиты.Найти("Артикул")<>Неопределено;