Перем СхемаКомпоновки;
Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура Кнопка1Нажатие(РедактируемыПериод)
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	
	Если РедактируемыПериод = "Поставки" Тогда
		Диалог.Период = НастройкаПериодаДатаПоставки;
	Иначе
		Диалог.Период = НастройкаПериодаДатаЗаказов;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("РедактируемыПериод",?(РедактируемыПериод.Имя="КнопкаВыбратьПериодПоставки","Поставки","Заказы"));
	
	Если Диалог.Редактировать() Тогда 
		ОбработчикВыбораПериодаДатыПоставки(Диалог.Период,СтруктураПараметров);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработчикВыбораПериодаДатыПоставки(Период,СтруктураПараметров) Экспорт 
	
	Если Период<>Неопределено Тогда
		НастройкаПериодаДатаПоставки=Неопределено;
		НастройкаПериодаДатаЗаказов=Неопределено;
		Если СтруктураПараметров.РедактируемыПериод="Поставки" Тогда
			НастройкаПериодаДатаПоставки=Период;
		Иначе
			НастройкаПериодаДатаЗаказов=Период;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьВидимостьВыбранногоПериода();
	
	
КонецПроцедуры // ОбработчикВыбораПериода()


Процедура УстановитьВидимостьВыбранногоПериода()
	
	ПоказатьПоПоставкам = ЗначениеЗаполнено(НастройкаПериодаДатаПоставки);
	
	ЭлементыФормы.НадписьНастройкаПериодаДатаЗаказов.Видимость = не ПоказатьПоПоставкам;
	ЭлементыФормы.ВыбранПериодЗаказов.Видимость = не ПоказатьПоПоставкам;
	ЭлементыФормы.НадписьНастройкаПериодаДатаПоставки.Видимость = ПоказатьПоПоставкам;
	ЭлементыФормы.ВыбранПериодПоставок.Видимость = ПоказатьПоПоставкам;
	
	Если Не ЗначениеЗаполнено(НастройкаПериодаДатаПоставки) и не ЗначениеЗаполнено(НастройкаПериодаДатаЗаказов) Тогда 
		ЭлементыФормы.Внимание_ОтборНеУстановлен_.Видимость=истина;
		ЭлементыФормы.СформироватьИсходныеДанные.Доступность=Ложь;
	иначе
		ЭлементыФормы.Внимание_ОтборНеУстановлен_.Видимость=Ложь;
		ЭлементыФормы.СформироватьИсходныеДанные.Доступность=Истина;
	КонецЕсли;
	
КонецПроцедуры


Процедура СформироватьИсходныеДанныеНажатие(Элемент)
	Состояние("СобираюИсходныеДанные...",50,,);
	
	СформироватьИсходныеДанныеСервер();	
	
	ЭлементыФормы.ИзвелеченныеДанные.СоздатьКолонки();
	ЭлементыФормы.ИзвелеченныеДанные.ОбновитьСтроки();
КонецПроцедуры

Процедура СформироватьИсходныеДанныеСервер()
    ИзвлеченныеДанные.Очистить();
	
	НастройкаПериода=?(ЗначениеЗаполнено(НастройкаПериодаДатаПоставки),НастройкаПериодаДатаПоставки,НастройкаПериодаДатаЗаказов);
	
	НачалоПериода = НастройкаПериода.ДатаНачала;
	Если Не ЗначениеЗаполнено(НастройкаПериода.ДатаОкончания) Тогда
		КонецПериода = КонецДня(Дата("39990101"));
	Иначе	
		КонецПериода = КонецДня(НастройкаПериода.ДатаОкончания);
	КонецЕсли;	

	ОтборПоДатеПоставки = ЗначениеЗаполнено(НастройкаПериодаДатаПоставки);
	ИзвлеченныеДанные=Анализ_СформироватьИсходныеДанныеСервер(НачалоПериода,КонецПериода,ОтборПоДатеПоставки);
	
	//Элементы.ГруппаСформироватьОтчет.Доступность=Истина;
	
	Если ИзвлеченныеДанные.Количество()>0 Тогда 
		ЭлементыФормы.СформироватьОтчет.Доступность=Истина;
	Иначе
		ЭлементыФормы.СформироватьОтчет.Доступность=Ложь;
	КонецЕсли;
	
КонецПроцедуры // СформироватьИсходныеДанныеСервер()

Процедура СформироватьОтчетНажатие(Элемент)
	
	СформироватьОтчетНаСервере();
	ТекущийЭлемент = ЭлементыФормы.Результат;
	ЭлементыФормы.Результат.ПоказатьУровеньГруппировокСтрок(1);
	
КонецПроцедуры

Функция СформироватьОтчетНаСервере()

	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ORDERS",ИзвлеченныеДанные);
	
	СхемаКомпоновки = ПолучитьМакет("Отчет_АнализЗаказов");
    АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаКомпоновки, Новый УникальныйИдентификатор);
	
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
	НастройкиСКД = СхемаКомпоновки.НастройкиПоУмолчанию;
	//
	//КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновки,КомпоновщикНастроек.ПолучитьНастройки(),ДанныеРасшифровки);
	//МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновки,НастройкиСКД,ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.Очистить();
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	ЭлементыФормы.Результат.Очистить();
	ЭлементыФормы.Результат.Вывести(ДокументРезультат);

КонецФункции // СформироватьОтчетНаСервере()


Процедура НастроитьОтчетНажатие(Элемент)
	ТекущийЭлемент = ЭлементыФормы.НастройкиСтруктурыОтчета;
КонецПроцедуры

Процедура ПриОткрытии()
	
	_СохраненныеЗначения = ВосстановитьЗначение("КонтурEDI_НастройкиОтчетаАнализ");
	Если _СохраненныеЗначения<>Неопределено Тогда
		НастройкаПериодаДатаЗаказов		=	_СохраненныеЗначения.НастройкаПериодаДатаЗаказов;
		НастройкаПериодаДатаПоставки	=	_СохраненныеЗначения.НастройкаПериодаДатаПоставки;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НастройкаПериодаДатаЗаказов) и НЕ ЗначениеЗаполнено(НастройкаПериодаДатаПоставки) Тогда 
		НастройкаПериодаДатаПоставки = Новый СтандартныйПериод(ВариантСтандартногоПериода.ЭтотМесяц);
	КонецЕсли;
	
	
	СхемаКомпоновки = ПолучитьМакет("Отчет_АнализЗаказов");
	
    АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаКомпоновки, Новый УникальныйИдентификатор);
    КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновки.НастройкиПоУмолчанию);
	
	УстановитьВидимостьВыбранногоПериода();
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	НастройкиОтчетаАнализ=Новый Структура;
	НастройкиОтчетаАнализ.Вставить("НастройкаПериодаДатаЗаказов",НастройкаПериодаДатаЗаказов);
	НастройкиОтчетаАнализ.Вставить("НастройкаПериодаДатаПоставки",НастройкаПериодаДатаПоставки);
	
	СохранитьЗначение("КонтурEDI_НастройкиОтчетаАнализ",НастройкиОтчетаАнализ);

КонецПроцедуры

Процедура ТабличноеПоле2Выбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Строка(ВыбраннаяСтрока.ЛевоеЗначение)="Партнер" и ВыбраннаяСтрока.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно Тогда 
		СтандартнаяОбработка=ложь;
		СписокПартнеров= новый СписокЗначений;
		СписокПартнеров.ЗагрузитьЗначения(ПолучитьСписокЭлементовСправочника("Партнеры").ВыгрузитьКолонку("Ссылка"));
		ВыбраннаяСтрока.ПравоеЗначение = ВыбратьИзСписка(СписокПартнеров).Значение;
		ВыбраннаяСтрока.Использование = Истина;
	КонецЕсли;
	
КонецПроцедуры
