Процедура ОсновныеДействияФормыКнопкаОК(Кнопка)

	СохранитьТорговыеСети();
	
	Оповестить("КонтурEDI_ОбновитьСписокПартнеров");
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

Функция СохранитьТорговыеСети()
		Для Каждого СтрокаТорговойСети ИЗ СписокЮрФизЛицТорговыхСетей.Строки Цикл
			Если (СтрокаТорговойСети.Пометка И НЕ СтрокаТорговойСети.Подключена) 
				или ФормаОткрытаКакДобавлениеЮрЛиц Тогда
				
				ТаблицаКонтрагентов = Новый ТаблицаЗначений;
				ТаблицаКонтрагентов.Колонки.Добавить("GLN");
				ТаблицаКонтрагентов.Колонки.Добавить("ЮрФизЛицо");
				
				Для Каждого СтрокаКонтрагента ИЗ СтрокаТорговойСети.Строки Цикл
					
					Если ЗначениеЗаполнено(СтрокаКонтрагента.Контрагент) Тогда
						Если ФормаОткрытаКакДобавлениеЮрЛиц Тогда   
							Если СтрокаКонтрагента.Пометка Тогда 
								НоваяСтрока = ТаблицаКонтрагентов.Добавить();
								
								НоваяСтрока.GLN			= СокрЛП(СтрокаКонтрагента.GLN);
								НоваяСтрока.ЮрФизЛицо	= СтрокаКонтрагента.Контрагент;
							КонецЕсли;
						иначе
							НоваяСтрока = ТаблицаКонтрагентов.Добавить();
							
							НоваяСтрока.GLN			= СокрЛП(СтрокаКонтрагента.GLN);
							НоваяСтрока.ЮрФизЛицо	= СтрокаКонтрагента.Контрагент;
						КонецЕсли;
					КонецЕсли;
					
				КонецЦикла;
				
				Если ТаблицаКонтрагентов.Количество()>0 Тогда
					Если ФормаОткрытаКакДобавлениеЮрЛиц Тогда
						СсылкаСети = ПолучитьТорговуюСетьПоКоду(СтрокаТорговойСети.КодСети);                    
						ДобавитьЮрЛицСети(ТаблицаКонтрагентов,СсылкаСети);

					иначе
						СохранитьТорговуюСеть(СокрЛП(СтрокаТорговойСети.КодСети),ТаблицаКонтрагентов);
						
						Форма = ПолучитьФорму("ФормаСервис_ОбновлениеДанныхПартнера");
						Форма.Параметры = Новый Структура("КодСети", СокрЛП(СтрокаТорговойСети.КодСети));
						Форма.ОткрытьМодально();
						
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
КонецФункции

Процедура ПриОткрытии()
	
	ПриОткрытииФормы(ЭтаФорма);
	
	ОбновитьДеревоЮрФизЛицТорговыхСетей();
	
	УстановитьТипЗначенияКолонки(ЭлементыФормы.СписокЮрФизЛицТорговыхСетей.Колонки.Контрагент,	"ЮрФизЛицоСтороннее");
	
	Если ФормаОткрытаКакДобавлениеЮрЛиц Тогда
		
		ЭлементыФормы.НадписьПримечание.Видимость = Ложь;
		ЭлементыФормы.НадписьДобавитьТСВручную.Видимость = Ложь;
		
		Если СписокЮрФизЛицТорговыхСетей.Строки.Количество()>0 Тогда
			СписокЮрФизЛицТорговыхСетей.Строки[0].Пометка = Ложь;
			ЭлементыФормы.СписокЮрФизЛицТорговыхСетей.ТекущаяСтрока = СписокЮрФизЛицТорговыхСетей.Строки[0];
			СписокЮрФизЛицТорговыхСетейПриИзмененииФлажка(ЭлементыФормы.СписокЮрФизЛицТорговыхСетей, ЭлементыФормы.СписокЮрФизЛицТорговыхСетей.Колонки[0]);
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

Процедура УстановитьТипЗначенияКолонки(Колонка,Тип1С)
	
	ПолеФормы	= Колонка.ЭлементУправления;
	ТипПоля		= ПолучитьТипЗначенияОбъекта(Тип1С);
	
	Если ТипПоля = Неопределено Тогда
		
		Сообщить("Не задан тип объекта 1С для поля с типом "+Тип1С);
		
	Иначе	
		
		ПолеФормы.ОграничениеТипа = Новый ОписаниеТипов(ТипПоля);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьДеревоЮрФизЛицТорговыхСетей()
	
	СписокЮрФизЛицТорговыхСетей.Строки.Очистить();
	
	ТорговыеСети = ПолучитьСписокТорговыхСетей();
	
	Если ТорговыеСети.Количество() = 0 Тогда
		ВывестиПредупреждение_КонтурEDI("Не удалось загрузить актуальный список сетей.");
	КонецЕсли;
	
	КоличествоНайденных = 0;
	
	Для каждого Стр ИЗ ТорговыеСети Цикл
		Если ФормаОткрытаКакДобавлениеЮрЛиц  и Стр.Код<>ДобавлениеЮрЛицСети Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТорговойСети = СписокЮрФизЛицТорговыхСетей.Строки.Добавить();
		СтрокаТорговойСети.Наименование = Стр.Наименование;
		СтрокаТорговойСети.КодСети = Стр.Код;
		
		Если Стр.Подключена Тогда
			СтрокаТорговойСети.Подключена = Стр.Подключена;
			СтрокаТорговойСети.Пометка =истина;
		КонецЕсли;
		
		//СтрокаТорговойСети.Пометка = Не СтрокаТорговойСети.Пометка;
		//ЭлементыФормы.СписокЮрФизЛицТорговыхСетей.ТекущаяСтрока = СтрокаТорговойСети;
		
	КонецЦикла;

КонецПроцедуры

Процедура СписокЮрФизЛицТорговыхСетейПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ФормаОткрытаКакДобавлениеЮрЛиц Тогда
	
		Если ЗначениеЗаполнено(ДанныеСтроки.КодСети) Тогда
			ОформлениеСтроки.Ячейки.Галочка.УстановитьФлажок(ДанныеСтроки.Пометка);
			ОформлениеСтроки.Шрифт = Новый Шрифт(ОформлениеСтроки.Шрифт,,,Истина);
		КонецЕсли;	
		
	ИначеЕсли ЗначениеЗаполнено(ДанныеСтроки.КодСети) Тогда
	
		Если (НЕ ДанныеСтроки.Подключена) Тогда
			ОформлениеСтроки.Ячейки.Галочка.УстановитьФлажок(ДанныеСтроки.Пометка);
		КонецЕсли;	
			
		ОформлениеСтроки.Шрифт = Новый Шрифт(ОформлениеСтроки.Шрифт,,,Истина);
		
	КонецЕсли;
	
	//Если ЗначениеЗаполнено(ДанныеСтроки.КодСети) или ФормаОткрытаКакДобавлениеЮрЛиц Тогда
	//
	//	Если (НЕ ДанныеСтроки.Подключена) ИЛИ (ЗначениеЗаполнено(ДанныеСтроки.КодСети) И ФормаОткрытаКакДобавлениеЮрЛиц = Истина) Тогда
	//		ОформлениеСтроки.Ячейки.Галочка.УстановитьФлажок(ДанныеСтроки.Пометка);
	//	КонецЕсли;	
	//		
	//	ОформлениеСтроки.Шрифт = Новый Шрифт(ОформлениеСтроки.Шрифт,,,Истина);
	//	
	//КонецЕсли;
	
	ЦветХорошо = Новый Цвет(220,250,220);
	ЦветПлохо  = WebЦвета.ТусклоРозовый;
	
	Если НЕ ЗначениеЗаполнено(ДанныеСтроки.КодСети) или ФормаОткрытаКакДобавлениеЮрЛиц Тогда
		
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Контрагент) и Не ДанныеСтроки.подключена  Тогда
			ЦветКонтрагента = ЦветПлохо;
			ОформлениеСтроки.Ячейки.Контрагент.УстановитьТекст("Выберите контрагента");
			ОформлениеСтроки.Ячейки.Контрагент.ЦветТекста = WebЦвета.Кирпичный;
		Иначе
			Если ФормаОткрытаКакДобавлениеЮрЛиц Тогда 
				//ОформлениеСтроки.Ячейки.Галочка.УстановитьФлажок(Ложь);
				//ОформлениеСтроки.Ячейки.Галочка.ОтображатьФлажок=Ложь;
			КонецЕсли;
			ЦветКонтрагента = ЦветХорошо;
		КонецЕсли;
			
		ОформлениеСтроки.Ячейки.Контрагент.ЦветФона = ЦветКонтрагента;
		
	КонецЕсли;
	
	Если ДанныеСтроки.Подключена Тогда
		
		ОформлениеСтроки.Ячейки.Галочка.ТолькоПросмотр = ?(ФормаОткрытаКакДобавлениеЮрЛиц,Ложь,Истина);
		ОформлениеСтроки.ЦветФона = WebЦвета.ШелковыйОттенок;
		
		ОформлениеСтроки.Ячейки.Наименование.УстановитьТекст(СокрЛП(ДанныеСтроки.Наименование) + " (соединение настроено)");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СписокЮрФизЛицТорговыхСетейПриИзмененииФлажка(Элемент, Колонка)
	
	ТекСтрока = ЭлементыФормы.СписокЮрФизЛицТорговыхСетей.ТекущаяСтрока;
	
	Если Не ТекСтрока = Неопределено Тогда
		
		ТекСтрока.Пометка = Не ТекСтрока.Пометка;
		
		Если ТекСтрока.Пометка Тогда
			
			ДанныеПоТС = ПолучитьСтруктуруДанныхТорговойСети(ТекСтрока.КодСети);
			Если НЕ ДанныеПоТС = Неопределено Тогда
				ЮрФизЛицаТС = ДанныеПоТС.ЮрФизЛица;
				
				КоличествоНайденных = 0;
				
				Для Каждого СтрЮФ Из ЮрФизЛицаТС Цикл
					НайденныйКонтрагент=Неопределено; //найденный в настройках
					НайденныйКонтрагент = КонтрагентНастроен(СтрЮФ, Новый Структура("Код",ТекСтрока.КодСети));
					Если ФормаОткрытаКакДобавлениеЮрЛиц и ЗначениеЗаполнено(НайденныйКонтрагент) Тогда
						//не добавляем
					иначе
						СтрокаКонтрагента = ТекСтрока.Строки.Добавить();
						СтрокаКонтрагента.Наименование = СтрЮФ.Наименование;
						СтрокаКонтрагента.ИНН = СтрЮФ.ИНН;
						СтрокаКонтрагента.КПП = СтрЮФ.КПП;
						СтрокаКонтрагента.GLN = СтрЮФ.GLN;
						СтрокаКонтрагента.Контрагент = НайтиЮрФизЛицоСтороннееПоРеквизитам(СтрЮФ.ИНН,СтрЮФ.КПП);;
						Если ЗначениеЗаполнено(СтрокаКонтрагента.Контрагент) Тогда
							КоличествоНайденных=КоличествоНайденных+1;
							СтрокаКонтрагента.Пометка = Истина;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				Если ФормаОткрытаКакДобавлениеЮрЛиц и  ТекСтрока.Строки.Количество() = 0 Тогда 
					Предупреждение("Для этой торговой сети не обнаружено новых юр. лиц.");
					ЭтаФорма.Закрыть();
				КонецЕсли;
			КонецЕсли;
			
			ЭлементыФормы.СписокЮрФизЛицТорговыхСетей.Развернуть(ТекСтрока);
			
		Иначе
			
			ТекСтрока.Строки.Очистить();
			ЭлементыФормы.СписокЮрФизЛицТорговыхСетей.Свернуть(ТекСтрока);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СписокЮрФизЛицТорговыхСетейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель)
	
	Отказ = Истина;
	
КонецПроцедуры

Процедура СписокЮрФизЛицТорговыхСетейПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

Процедура СписокЮрФизЛицТорговыхСетейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущаяСтрока = ЭлементыФормы.СписокЮрФизЛицТорговыхСетей.ТекущиеДанные;
	
	Если НЕ ТекущаяСтрока = Неопределено Тогда
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Контрагент) Тогда
			ТекущаяСтрока.Контрагент = ПолучитьПустуюСсылкуОбъекта("ЮрФизЛицоСтороннее");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура СписокЮрФизЛицТорговыхСетейВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ТекущаяСтрока = ЭлементыФормы.СписокЮрФизЛицТорговыхСетей.ТекущиеДанные;
	
	Если НЕ ТекущаяСтрока = Неопределено Тогда
		Если ЗначениеЗаполнено(ТекущаяСтрока.КодСети) Тогда
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

Процедура НадписьДобавитьТСВручнуюНажатие(Элемент)
	
	ПодключитьОбработчикОжидания("ЗакрытьФорму",0.1,Истина);
	
	ОткрытьФормуЭлементаСправочника("Партнеры");

КонецПроцедуры

Процедура ЗакрытьФорму()
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

Функция ДобавитьЮрЛицСети(СписокЭлементов,СсылкаНаПартнера)
	
	Отказ=Ложь;
	
	ТаблицаТекущих = ПолучитьСписокЭлементовСправочника("ЮрФизЛицаСторонние",СсылкаНаПартнера);
	
	ТаблицаТекущих.Колонки.Добавить("Признак");
	ТаблицаТекущих.ЗаполнитьЗначения(Ложь,"Признак");
	
	ТаблицаТекущих.Индексы.Добавить("ЮрФизЛицо");
	
	ТаблицаНовых = СписокЭлементов;
	
	//добавим в таблицу новых таблицу текущих
	Для Каждого СтрокаДобавляемых из ТаблицаТекущих Цикл
		НоваяСтр=ТаблицаНовых.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтр,СтрокаДобавляемых);
	КонецЦикла;
	ТаблицаНовых.Свернуть("ЮрФизЛицо, GLN",);
	
	
	// мы знаем, что контрагент в каждой из таблиц встречается один раз, так что можем спокойно сравнивать по нему
	Для Каждого Стр Из ТаблицаНовых Цикл
		
		// забиваем на пустые строки
		Если НЕ ЗначениеЗаполнено(Стр.GLN) И НЕ ЗначениеЗаполнено(Стр.ЮрФизЛицо) Тогда
			Продолжить;
		КонецЕсли;
		
		НайденнаяСтрока = ТаблицаТекущих.Найти(Стр.ЮрФизЛицо,"ЮрФизЛицо");
		Если НЕ НайденнаяСтрока = Неопределено Тогда
			
			Если НЕ НайденнаяСтрока.GLN = Стр.GLN Тогда
				
				УстановитьЗначениеСвойстваОбъекта(Стр.ЮрФизЛицо, "GLN_Контрагента", Стр.GLN, Отказ);
				
			КонецЕсли;	
			
			НайденнаяСтрока.Признак = Истина;
			
		Иначе
			УстановитьЗначениеСвойстваОбъекта(Стр.ЮрФизЛицо, "ПартнерКонтрагента",	СсылкаНаПартнера,	Отказ);
			УстановитьЗначениеСвойстваОбъекта(Стр.ЮрФизЛицо, "GLN_Контрагента",		Стр.GLN, 			Отказ);
			
		КонецЕсли;
		
		Если Отказ Тогда 
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	// очистим свойства исключенных контрагентов
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Признак",Ложь);
	
	НайденныеСтроки = ТаблицаТекущих.НайтиСтроки(СтруктураОтбора);
	Для Каждого Стр ИЗ НайденныеСтроки Цикл
		
		УдалитьЗначениеСвойстваОбъекта(Стр.ЮрФизЛицо, "ПартнерКонтрагента",	Отказ);
		УдалитьЗначениеСвойстваОбъекта(Стр.ЮрФизЛицо, "GLN_Контрагента",		Отказ);
		
	КонецЦикла;	
КонецФункции

Функция КонтрагентНастроен(СтрЮФ,СтрСети)  //вернем контрагента или неопределено
	Запрос = ИнициализироватьЗапрос_КонтурEDI(ВнешнееХранилище);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	КонтурEDI_ДополнительныеРеквизиты.Объект
	|ПОМЕСТИТЬ КонтрагентТорговойСети
	|ИЗ
	|	РегистрСведений.КонтурEDI_ДополнительныеРеквизиты КАК КонтурEDI_ДополнительныеРеквизиты
	|ГДЕ
	|	КонтурEDI_ДополнительныеРеквизиты.Свойство = ""ПартнерКонтрагента""
	|	И КонтурEDI_ДополнительныеРеквизиты.Значение = &Значение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтурEDI_ДополнительныеРеквизиты.Объект,
	|	КонтурEDI_ДополнительныеРеквизиты.Значение КАК GLN
	|ИЗ
	|	РегистрСведений.КонтурEDI_ДополнительныеРеквизиты КАК КонтурEDI_ДополнительныеРеквизиты
	|ГДЕ
	|	КонтурEDI_ДополнительныеРеквизиты.Свойство = ""GLN_Контрагента""
	|	И КонтурEDI_ДополнительныеРеквизиты.Объект В
	|			(ВЫБРАТЬ
	|				КонтрагентТорговойСети.Объект
	|			ИЗ
	|				КонтрагентТорговойСети)";
	
	ТорговаяСеть = ПолучитьТорговуюСетьПоКоду(СтрСети.Код);
	// + Внешнее хранилище. kns 2014.09.10
	Если ВнешнееХранилище Тогда
		Если ТипЗнч(ТорговаяСеть) = Тип("Строка") Тогда
			ТорговаяСеть = СоединениеСХранилищем.ЗначениеИзСтрокиВнутр(ТорговаяСеть);
		КонецЕсли;
	КонецЕсли;
	// - Внешнее хранилище. kns 2014.09.10
	Запрос.УстановитьПараметр("Значение",ТорговаяСеть);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если  Выборка.Следующий() Тогда
		Если СтрЮФ.GLN = Выборка.GLN Тогда
			// + Внешнее хранилище. kns 2014.09.10
			Если ВнешнееХранилище Тогда
				Возврат ЗначениеИзСтрокиВнутр(Выборка.Объект);
			Иначе
				// - Внешнее хранилище. kns 2014.09.10 
				Возврат Выборка.Объект;
			КонецЕсли;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	иначе
		Возврат Неопределено;
	КонецЕсли;
	
	
КонецФункции

Процедура СписокЮрФизЛицТорговыхСетейКонтрагентПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ЭлементыФормы.СписокЮрФизЛицТорговыхСетей.ТекущиеДанные.Контрагент) Тогда 
		ЭлементыФормы.СписокЮрФизЛицТорговыхСетей.ТекущиеДанные.пометка=истина;
	КонецЕсли;
	
КонецПроцедуры
