Функция ПроверитьЗначенияФормы()
	
	// 1. инициализируем таблицу вывода ошибок
	ТаблицаОшибок = ИнициализироватьТаблицуОшибок();
	
	// 2. передать структуру для проверки
	ПроверитьПолеФормы(ТаблицаОшибок, Партнер,					, Истина, "Партнер");
	ПроверитьПолеФормы(ТаблицаОшибок, АдресДоставки,			, Истина, "АдресДоставки");
	ПроверитьПолеФормы(ТаблицаОшибок, GLN, 			"GLN"	, Истина, "GLN");
	
	ПроверитьСвязанныеСправочникиТочкиДоставкиНаПовтор(Партнер,СсылкаТочкиДоставки,ТаблицаОшибок, ЮрФизЛицо, ТочкаДоставкиСвойСправочник);
	
	Если ТаблицаОшибок.Количество() > 0 Тогда
		
		Если ПустаяСтрока(Наименование) Тогда
			
			ТекстЗаголовка = "При заполнении точки доставки найдены ошибки.";
			
		Иначе
			
			ТекстЗаголовка = "При заполнении точки доставки """+СокрЛП(Наименование)+""" найдены ошибки.";
			
		КонецЕсли;
			
		ОткрытьФормуВыводаОшибок(ТекстЗаголовка,ТаблицаОшибок,ЭтаФорма);
		
		Возврат Ложь;
		
	Иначе
		
		Возврат Истина;
		
	КонецЕсли;
	
	// 3. обработать результат
	
КонецФункции

Процедура КнопкаВыполнитьНажатие(Кнопка)

	Если НЕ ПроверитьЗначенияФормы() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("Партнер",			Партнер);
	СтруктураПолей.Вставить("Наименование",		Наименование);
	СтруктураПолей.Вставить("GLN",				GLN);
	СтруктураПолей.Вставить("АдресДоставки",	АдресДоставки);
	СтруктураПолей.Вставить("ЮрФизЛицо",		ЮрФизЛицо);
    СтруктураПолей.Вставить("ТочкаДоставкиСвойСправочник",			ТочкаДоставкиСвойСправочник);
    СтруктураПолей.Вставить("ЗагружатьСообщенияПоТочкеДоставки",	ЗагружатьСообщенияПоТочкеДоставки);
	
	СохранитьЭлементСправочника("ТочкиДоставкиСторонние",СсылкаТочкиДоставки,СтруктураПолей);
	
	Оповестить("КонтурEDI_ОбновитьСписокТочекДоставки");
		
	ЭтаФорма.Закрыть(Истина);
	
КонецПроцедуры

Процедура УстановитьТипПоля1С(ИмяНаФорме,Тип1С)
	
	ПолеФормы	= ЭлементыФормы[ИмяНаФорме];
	ТипПоля		= ПолучитьТипЗначенияОбъекта(Тип1С);
			
	Если ТипПоля = Неопределено Тогда
		
		Сообщить("Не задан тип объекта 1С для поля с типом "+Тип1С);
		
	Иначе	
		
		ЭлементыФормы[ИмяНаФорме].ОграничениеТипа = Новый ОписаниеТипов(ТипПоля);
		
		Если НЕ ЗначениеЗаполнено(ЭтаФорма[ИмяНаФорме]) Тогда
			
			ЭтаФорма[ИмяНаФорме] = ПолучитьПустуюСсылкуОбъекта(Тип1С);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УправлениеВидимостьюСправочникаТочекДоставок()
	
	СвойСправочникТочекДоставки = ПолучитьКонстантуEDI("СвойСправочникТочекДоставки");
	
	Если НЕ ЗначениеЗаполнено(СвойСправочникТочекДоставки) Тогда
		
		ЭлементыФормы.ТочкаДоставкиСвойСправочник.Доступность = Ложь;
		
		ЭлементыФормы.НадписьОткрытьНастройки.Видимость			= Истина;
		ЭлементыФормы.НадписьПодсказкаТочекДоставок.Видимость	= Истина;
		
	Иначе
		
		ЭлементыФормы.ТочкаДоставкиСвойСправочник.Доступность = Истина;
		
		ЭлементыФормы.ТочкаДоставкиСвойСправочник.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка."+СокрЛП(СвойСправочникТочекДоставки));
		
		Если НЕ ЗначениеЗаполнено(ТочкаДоставкиСвойСправочник) Тогда
			
			ЭтаФорма.ТочкаДоставкиСвойСправочник = Справочники[СвойСправочникТочекДоставки].ПустаяСсылка();
			
		КонецЕсли;
		
		ЭлементыФормы.НадписьОткрытьНастройки.Видимость			= Ложь;
		ЭлементыФормы.НадписьПодсказкаТочекДоставок.Видимость	= Ложь;
		
	КонецЕсли;
	
	
КонецПроцедуры

Процедура УстановитьЗаголовокПодсказкиЮрФизлица()
	ГрузополучательИзЮрФизЛицаТД						= (ПолучитьКонстантуEDI("ГрузополучательИзЮрФизЛицаТД") = Истина);
	ЗаполняемоеПолеВЗаказе = ?(ГрузополучательИзЮрФизЛицаТД, "Грузополучатель","Контрагент");
	ЭлементыФормы.НадписьПодсказкаЮрФизлицо.Заголовок = "Согласно текущим настройкам, будет использовано для заполнения поля """+ЗаполняемоеПолеВЗаказе+""" в документе заказа.";
КонецПроцедуры

Процедура ПриОткрытии()
	
	ПриОткрытииФормы(ЭтаФорма);
	
	Если ЗначениеЗаполнено(СсылкаТочкиДоставки) Тогда
		
		СтруктураЭлемента = ПолучитьЭлементСправочника("ТочкиДоставкиСторонние", СсылкаТочкиДоставки);
		
		Если НЕ СтруктураЭлемента = Неопределено Тогда
		
			Наименование	= СтруктураЭлемента.Наименование;
			Партнер			= СтруктураЭлемента.Партнер;
			
			ПредставлениеПартнера = ПолучитьПредставлениеЭлементаСправочника(Партнер);
			
			GLN				= СтруктураЭлемента.GLN;
			АдресДоставки	= СтруктураЭлемента.АдресДоставки;
			ЮрФизЛицо		= СтруктураЭлемента.ЮрФизЛицо;
			Подразделение	= СтруктураЭлемента.Подразделение;
			ТочкаДоставкиСвойСправочник = СтруктураЭлемента.ТочкаДоставкиСвойСправочник;
			
			Если СтруктураЭлемента.Свойство("ЗагружатьСообщенияПоТочкеДоставки") Тогда
				ЗагружатьСообщенияПоТочкеДоставки = СтруктураЭлемента.ЗагружатьСообщенияПоТочкеДоставки;
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		ПредставлениеПартнера = ПолучитьПредставлениеЭлементаСправочника(Партнер);
		
	КонецЕсли;
	
	ЭлементыФормы.ЗагружатьСообщенияПоТочкеДоставки.Видимость = (ПараметрыПользователяEDI.ФильтрОбменаПоТочкамДоставки = Истина);
	
	УстановитьЗаголовокПодсказкиЮрФизлица();
	
	УправлениеВидимостьюСправочникаТочекДоставок();
	
	Если НЕ ВнешнееХранилище Тогда
		УстановитьТипПоля1С("Партнер",		"Партнер");
	КонецЕсли;	
	УстановитьТипПоля1С("ЮрФизЛицо",	"ЮрФизЛицоСтороннее");
		
	// Автотесты
	Если ЗначениеЗаполнено(ПараметрыАвтотестирования) Тогда

		ПодключитьОбработчикОжидания("ЗаписатьНастройкиАвтотестирования",0.1,Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьНастройкиАвтотестирования()
	
	КнопкаВыполнитьНажатие("");
	
КонецПроцедуры

Процедура ПартнерНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ВыбратьЭлементСправочника(Партнер,"Партнер",,СтандартнаяОбработка);
	
	ПредставлениеПартнера = ПолучитьПредставлениеЭлементаСправочника(Партнер);
	
КонецПроцедуры

Процедура НадписьОткрытьНастройкиНажатие(Элемент)
	
	ФормаНастройки = ПолучитьФорму("ФормаСервис_Настройка");
	Если Элемент.Имя = "НадписьОткрытьНастройки_ЮрФизЛицо" Тогда
		ФормаНастройки.ТекущаяВкладка = "СтраницаЗаказыПокупателей";
	ИначеЕсли Элемент.Имя = "НадписьОткрытьНастройки" Тогда
		ФормаНастройки.ТекущаяВкладка = "ПрочиеНастройки";
	КонецЕсли;
	ФормаНастройки.ОткрытьМодально();

	УправлениеВидимостьюСправочникаТочекДоставок();
	УстановитьЗаголовокПодсказкиЮрФизлица();
	
КонецПроцедуры

Процедура ТочкаДоставкиСвойСправочникНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ВыбранноеЗначение = ОбработкаСобытияПодключаемогоМодуля("ПередВыборомТочкиДоставкиСвойСправочник",,Новый Структура("ЮрФизЛицо,ТекущееЗначение,Партнер,GLN",ЮрФизЛицо,Элемент.Значение,Партнер,GLN));
	Если НЕ ВыбранноеЗначение=Неопределено Тогда
		Элемент.Значение = ВыбранноеЗначение;
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	СвойСправочникТочекДоставки = ПолучитьКонстантуEDI("СвойСправочникТочекДоставки");
	СтандартнаяОбработка = Ложь;
	
	Попытка
		
		Парам = Новый Структура("Отбор,ТекущаяСтрока", Новый Структура("Владелец", ЮрФизЛицо), Элемент.Значение);
		ФРМ = ПолучитьФорму("Справочник." + СвойСправочникТочекДоставки + ".ФормаВыбора", Парам, Элемент);
		
	Исключение
		
		//На 8.1 при открытии справочника, имеющего владельца, будет вызвано исключение.
		ФРМ = Справочники[СвойСправочникТочекДоставки].ПолучитьФормуВыбора(,Элемент);
		
		Попытка
			ФРМ.Отбор.Владелец.Установить(ЮрФизЛицо);
		Исключение
		КонецПопытки;
			
	КонецПопытки;
	
	ФРМ.ОткрытьМодально();
		
КонецПроцедуры

Процедура ЮрФизЛицоНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТипПоля	= ПолучитьТипЗначенияОбъекта("ЮрФизЛицоСтороннее");
	
	Если Лев(ВРЕГ(ТипПоля),10)="СПРАВОЧНИК" Тогда
		
		СтандартнаяОбработка = Ложь;
		ИмяСправочника = ПолучитьТипЗначенияОбъекта("ЮрФизЛицоСтороннее",,Истина);
		
		Попытка
			Парам = Новый Структура("ТекущаяСтрока", Элемент.Значение);
			ФРМ = ПолучитьФорму("Справочник." + ИмяСправочника + ".ФормаВыбора", Парам, Элемент);
		Исключение
			ФРМ = Справочники[ИмяСправочника].ПолучитьФормуВыбора(,Элемент);
		КонецПопытки;
		
		ФРМ.ПоложениеОкна = ВариантПоложенияОкна.НеПерекрыватьВладельца;
		ФРМ.ОткрытьМодально();
		
	КонецЕсли;
	
КонецПроцедуры

