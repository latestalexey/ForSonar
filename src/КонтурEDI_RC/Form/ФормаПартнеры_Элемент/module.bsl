Перем мФормаПодбора;
Перем мИмяСправочникаНоменклатура;

Функция ПроверитьЗначенияФормы()
	
	// 1. инициализируем таблицу вывода ошибок
	ТаблицаОшибок = ИнициализироватьТаблицуОшибок();
	
	// 2. передать структуру для проверки
	ПроверитьПолеФормы(ТаблицаОшибок, Наименование, "Строка50",	Истина, "Наименование");
	ПроверитьПолеФормы(ТаблицаОшибок, GLN,			 "GLN",			Истина, "GLN");
	
	// юр лица
	
	ТабПроверки = ТаблицаЮрФизЛиц.Скопировать();
	
	СписокПолей = Новый СписокЗначений;
	СписокПолей.Добавить("ЮрФизЛицо", "Юр\физ лицо");
	СписокПолей.Добавить("GLN","GLN");
	
	НайтиДублиВТаблице(ТаблицаОшибок,ТабПроверки, "ЮрФизЛицо", "Юр. лица", "Юр\физ лицо");
	НайтиДублиВТаблице(ТаблицаОшибок,ТабПроверки, "GLN", 		"Юр. лица", "GLN");
	
	Если НЕ ЭтоПоставщик И НЕ ЭтоТорговаяСеть Тогда
		ЗафиксироватьОшибку(ТаблицаОшибок,"GLN",,,"Необходимо указать, кем является ваш партнер: поставщиком или торговой сетью.");
	КонецЕсли;
	
	сч = 0;
	
	Для каждого Стр Из ТабПроверки Цикл
		
		сч = сч + 1;
		
		Если ЗначениеЗаполнено(Стр.GLN) ИЛИ ЗначениеЗаполнено(Стр.ЮрФизЛицо) Тогда
		
	 		ПроверитьПолеФормы(ТаблицаОшибок, Стр.GLN,			"GLN", Истина, "GLN", 		"ТаблицаЮрФизЛиц",сч,				,"Юр. лица");
	 		ПроверитьПолеФормы(ТаблицаОшибок, Стр.ЮрФизЛицо,		 , Истина, "ЮрФизЛицо", "ТаблицаЮрФизЛиц",сч,"Юр\физ лицо"	,"Юр. лица");
		
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Стр.ЮрФизЛицо) Тогда
			
			ПартнерЮрФизЛица = ОпределитьПартнера(Новый Структура("ТипЗначения,ЮрФизЛицо","ЮрФизЛицо",Стр.ЮрФизЛицо));
			// + Внешнее хранилище. kns 2014.08.22 // kns _метка_ вернуть строку или ком?
			Если ВнешнееХранилище Тогда
				Если ТипЗнч(ПартнерЮрФизЛица)=Тип("COMОбъект") Тогда
					ПартнерЮрФизЛица = СоединениеСХранилищем.ЗначениеВСтрокуВнутр(ПартнерЮрФизЛица);
				КонецЕсли;
			КонецЕсли;
			// - Внешнее хранилище. kns 2014.08.22
			Если ЗначениеЗаполнено(ПартнерЮрФизЛица) И НЕ ПартнерЮрФизЛица = СсылкаНаПартнера Тогда
				ЗафиксироватьОшибку(ТаблицаОшибок,"GLN","ТаблицаЮрФизЛиц",сч,"Юр.\физ лицо """+СокрЛП(Стр.ЮрФизЛицо)+""" уже выбрано у партнера: "+СокрЛП(ПартнерЮрФизЛица));
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	//проверим синонимы
	Для Каждого СтрокаСинонима Из СинонимыОрганизации Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаСинонима.GLN) Тогда
			
			ЗафиксироватьОшибку(ТаблицаОшибок,"GLN","СинонимыОрганизации",,"Не заполнены все GLN на закладке ""Синонимы""");
			
		ИначеЕсли СтрокаСинонима.GLN = GLN Тогда
			
			ЗафиксироватьОшибку(ТаблицаОшибок,"GLN","СинонимыОрганизации",,"Синоним "+СтрокаСинонима.GLN+" уже указан в качестве основного GLN");
			
		ИначеЕсли СинонимыОрганизации.НайтиСтроки(Новый Структура("GLN",СтрокаСинонима.GLN)).Количество()>1 Тогда
			
			ЗафиксироватьОшибку(ТаблицаОшибок,"GLN","СинонимыОрганизации",,"Синоним "+СтрокаСинонима.GLN+" встречается несколько раз");
			
		КонецЕсли;
		
		//еще нужны проверки: нет ли у кого-то уже такого GLN/синонима
		
	КонецЦикла;
	
	// проверяем возможные комбинации настроек
	СтруктураПолейПартнера = Новый Структура();
	СтруктураПолейПартнера.Вставить("Наименование",							Наименование);
	СтруктураПолейПартнера.Вставить("GLN",									GLN);
	СтруктураПолейПартнера.Вставить("КодСети",								КодСети);
	СтруктураПолейПартнера.Вставить("ЭтоТорговаяСеть",						ЭтоТорговаяСеть);
	СтруктураПолейПартнера.Вставить("ЭтоПоставщик",							ЭтоПоставщик);
	
	ДобавитьСтрокиДереваВСтруктуру(ДеревоНастроек,СтруктураПолейПартнера);
	
	//переходим на новый интерфейс, разрешаем любые цепочки
	
	//СписокДопустимыхКомбинаций = Новый СписокЗначений;
	//СписокДопустимыхКомбинаций.Добавить("PORDERS+ORDERS+ORDRSP+DESADV+RECADV+INVOIC");
	//СписокДопустимыхКомбинаций.Добавить("PORDERS+ORDERS+DESADV+RECADV+INVOIC");
	//СписокДопустимыхКомбинаций.Добавить("ORDERS+ORDRSP+DESADV+RECADV+INVOIC");
	//СписокДопустимыхКомбинаций.Добавить("ORDERS+DESADV+RECADV+INVOIC");
	//СписокДопустимыхКомбинаций.Добавить("ORDERS+ORDRSP+DESADV+RECADV");
	//СписокДопустимыхКомбинаций.Добавить("ORDERS+DESADV+RECADV");
	//СписокДопустимыхКомбинаций.Добавить("ORDERS");
	//СписокДопустимыхКомбинаций.Добавить("INVOIC");
	//СписокДопустимыхКомбинаций.Добавить("ORDERS+ORDRSP");
	//СписокДопустимыхКомбинаций.Добавить("PORDERS+ORDERS+ORDRSP");
	//СписокДопустимыхКомбинаций.Добавить("ORDERS+INVOIC");
	//СписокДопустимыхКомбинаций.Добавить("RECADV+INVOIC");
	//СписокДопустимыхКомбинаций.Добавить("ORDERS+RECADV+INVOIC");
	//
	//СписокДопустимыхКомбинаций.Добавить("ORDERS+ORDRSP+DESADV");
	//СписокДопустимыхКомбинаций.Добавить("ORDERS+ORDRSP+RECADV");
	//СписокДопустимыхКомбинаций.Добавить("ORDERS+DESADV");
	//СписокДопустимыхКомбинаций.Добавить("DESADV+RECADV+INVOIC");
	//
	//ТекущаяКомбинация = "*" +	?(СтруктураПолейПартнера.PORDERS = Истина,"PORDERS","")+"+"+
	//?(СтруктураПолейПартнера.ORDERS  = Истина,"ORDERS","")+"+"+
	//?(СтруктураПолейПартнера.ORDRSP  = Истина,"ORDRSP","")+"+"+
	//?(СтруктураПолейПартнера.DESADV  = Истина,"DESADV","")+"+"+
	//?(СтруктураПолейПартнера.RECADV  = Истина,"RECADV","")+"+"+
	//?(СтруктураПолейПартнера.INVOIC  = Истина,"INVOIC","")+"*";
	//
	//ТекущаяКомбинация = СтрЗаменить(ТекущаяКомбинация,"+++++","+");
	//ТекущаяКомбинация = СтрЗаменить(ТекущаяКомбинация,"++++","+");
	//ТекущаяКомбинация = СтрЗаменить(ТекущаяКомбинация,"+++","+");
	//ТекущаяКомбинация = СтрЗаменить(ТекущаяКомбинация,"++","+");
	//ТекущаяКомбинация = СтрЗаменить(ТекущаяКомбинация,"*+","");
	//ТекущаяКомбинация = СтрЗаменить(ТекущаяКомбинация,"+*","");
	//ТекущаяКомбинация = СтрЗаменить(ТекущаяКомбинация,"*","");
	//
	//Если СписокДопустимыхКомбинаций.НайтиПоЗначению(ТекущаяКомбинация)=Неопределено Тогда
	//	
	//	ТекстВозможныхЦепочек = "";
	//	Для Каждого Зн Из СписокДопустимыхКомбинаций Цикл
	//		ТекстВозможныхЦепочек = ТекстВозможныхЦепочек+Символы.ПС+"  - "+Зн.Значение;
	//	КонецЦикла;
	//	
	//	ЗафиксироватьОшибку(ТаблицаОшибок, ,,,"Неверная настройка возможных сообщений. Допустимые комбинации:"+ТекстВозможныхЦепочек);
	//КонецЕсли;
	
	Если ТаблицаОшибок.Количество() > 0 Тогда
		
		ТекстЗаголовка = "При заполнения партнера найдены ошибки.";
			
		ОткрытьФормуВыводаОшибок(ТекстЗаголовка,ТаблицаОшибок,ЭтаФорма);
		
		Возврат Ложь;
		
	Иначе
		
		Возврат Истина;
		
	КонецЕсли;
	
КонецФункции


//***********************************************************
//	СОХРАНЕНИЕ

// проверки перед записью

Функция мНайтиДублиВТаблице(ТаблицаПроверки,Поле,ИмяТаблицы,ИмяПоля)
	
	Таблица = ТаблицаПроверки.Скопировать();
	
	ЕстьОшибки = Ложь;
	
	Таблица.Колонки.Добавить("Признак");
	Таблица.ЗаполнитьЗначения(1,"Признак");
	
	Таблица.Свернуть(Поле,"Признак");
	
	Для Каждого Стр Из Таблица Цикл
		
		Если Стр.Признак>1 Тогда
			Сообщить("В таблице " + ИмяТаблицы + ", "+ИмяПоля+": """+СокрЛП(Стр[Поле])+""" встречается несколько раз ("+Строка(Стр.Признак)+")!",СтатусСообщения.Внимание);
			ЕстьОшибки = Истина;
		КонецЕсли;
			
	КонецЦикла;
	
	Возврат ЕстьОшибки;
	
КонецФункции

Функция ЕстьПустыеЗначенияВТаблице(ТабПроверки,СписокПолей,ИмяТаблицы)
	
	ЕстьОшибки = Ложь;
	
	сч = 0;
	
	Для Каждого Стр Из ТабПроверки Цикл
		сч = сч+1;
		Для Каждого Поле Из СписокПолей Цикл
			Если НЕ ЗначениеЗаполнено(Стр[Поле.Значение]) Тогда
				Сообщить("В таблице " + ИмяТаблицы + ", в строке "+Строка(сч)+" не заполнено поле """+Поле.Представление+"""",СтатусСообщения.Внимание); 
				ЕстьОшибки = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ЕстьОшибки;
	
КонецФункции

Функция ПроверитьРеквизитыШапки()
	
	ВсеХорошо = Истина;
	
	Если НЕ ЭтоТорговаяСеть И НЕ ЭтоПоставщик Тогда
		Предупреждение("Необходимо указать, кем является партнер: торговой сетью или поставщиком.");
		ВсеХорошо = Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(Наименование) Тогда
		
		Предупреждение("Не заполнено наименование!");
		ВсеХорошо = Ложь;		
		
	КонецЕсли;
	
	Возврат ВсеХорошо;
	
КонецФункции

Функция ПроверитьРеквизитыЮрЛиц()
	
	ВсеХорошо = Истина;
	
	ТабПроверки = ТаблицаЮрФизЛиц.Скопировать();
	
	Если мНайтиДублиВТаблице(ТабПроверки, "ЮрФизЛицо", "Юр. лица", "ЮрФизЛицо") Тогда
		
		ВсеХорошо = Ложь;
		
	КонецЕсли;
	
	Если мНайтиДублиВТаблице(ТабПроверки, "GLN", "Юр. лица", "GLN") Тогда
		
		ВсеХорошо = Ложь;
		
	КонецЕсли;
	
	СписокПолей = Новый СписокЗначений;
	СписокПолей.Добавить("ЮрФизЛицо");
	СписокПолей.Добавить("GLN","GLN");
	
	Если ЕстьПустыеЗначенияВТаблице(ТабПроверки, СписокПолей, "Юр. лица") Тогда
		
		ВсеХорошо = Ложь;
		
	КонецЕсли;
	
	Возврат ВсеХорошо;
	
КонецФункции

Функция ПроверитьРеквизитыТочекДоставки()
	
	ВсеХорошо = Истина;
	
	ТабПроверки = ТаблицаТочекДоставки.Скопировать();
	
	//Если НайтиДублиВТаблице(ТабПроверки, "ТочкаДоставки", "Точки доставки", "ТочкаДоставки") Тогда
	//	
	//	ВсеХорошо = Ложь;
	//	
	//КонецЕсли;
	Если мНайтиДублиВТаблице(ТабПроверки, "GLN", "Точки доставки", "GLN") Тогда
		
		ВсеХорошо = Ложь;
		
	КонецЕсли;
	
	СписокПолей = Новый СписокЗначений;
	СписокПолей.Добавить("GLN","GLN");
	
	Если ЕстьПустыеЗначенияВТаблице(ТабПроверки, СписокПолей, "Точки доставки") Тогда
		
		ВсеХорошо = Ложь;
		
	КонецЕсли;
	
	Возврат ВсеХорошо;
	
КонецФункции


// основная функция записи

Функция ЗаписатьИзменения()
	
	Если НЕ ПроверитьЗначенияФормы() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СтруктураПолейПартнера = Новый Структура();
	СтруктураПолейПартнера.Вставить("Наименование",							Наименование);
	СтруктураПолейПартнера.Вставить("GLN",									GLN);
	СтруктураПолейПартнера.Вставить("КодСети",								КодСети);
	СтруктураПолейПартнера.Вставить("ЭтоТорговаяСеть",						ЭтоТорговаяСеть);
	СтруктураПолейПартнера.Вставить("ЭтоПоставщик",							ЭтоПоставщик);
	
	ДобавитьСтрокиДереваВСтруктуру(ДеревоНастроек,СтруктураПолейПартнера);
	
	Отказ = НЕ ПроверитьКорректностьНастроекПартнераПередЗаписью(СтруктураПолейПартнера);
	
	Если Отказ Тогда
		Возврат Ложь;
	КонецЕсли;

	СинонимыОднойСтрокой = "";
	Для Каждого СтрокаСинонимов Из СинонимыОрганизации Цикл
		СинонимыОднойСтрокой = ?(СинонимыОднойСтрокой="","",СинонимыОднойСтрокой+",")+СтрокаСинонимов.GLN;
	КонецЦикла;
	
	НачатьТранзакцию_КонтурEDI();
	
	Попытка
		
		СохранитьЭлементСправочника("Партнеры",СсылкаНаПартнера,СтруктураПолейПартнера);
		
		УстановитьЗначениеСвойстваОбъекта(СсылкаНаПартнера, "GLN_Партнера_Синонимы",	СинонимыОднойСтрокой);
		
		СохранитьСписокЭлементовСправочника("ЮрФизЛицаСторонние",ТаблицаЮрФизЛиц,СсылкаНаПартнера);
	
		ЗафиксироватьТранзакцию_КонтурEDI();
		
		Модифицированность	= Ложь;
		ЭтоНовыйПартнер		= Ложь;
		
	Исключение
		
		ОтменитьТранзакцию_КонтурEDI();
		СсылкаНаПартнера = Неопределено;
		
	КонецПопытки;
	
	Возврат НЕ Отказ;
	
КонецФункции

//************************************************************
// УСТАНОВКА ТИПОВ

Процедура УстановитьТипЗначенияКолонки(Колонка,Тип1С)
	
	ПолеФормы	= Колонка.ЭлементУправления;
	ТипПоля		= ПолучитьТипЗначенияОбъекта(Тип1С);
	
	Если ТипПоля = Неопределено Тогда
		Сообщить("Не задан тип объекта 1С для поля с типом "+Тип1С);
	Иначе	
		
		ПолеФормы.ОграничениеТипа = Новый ОписаниеТипов(ТипПоля);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьТипыЗначенийПолей()
	
	УстановитьТипЗначенияКолонки(ЭлементыФормы.ТаблицаЮрФизЛиц.Колонки.ЮрФизЛицо,		"ЮрФизЛицоСтороннее");
	
КонецПроцедуры


//***********************************************************
//	ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ОбновитьСписокТочекДоставки()
	
	ТекGLN = Неопределено;
	
	ТекСтрока = ЭлементыФормы.ТаблицаТочекДоставки.ТекущаяСтрока;
	Если НЕ ТекСтрока = Неопределено Тогда
			
		ТекGLN = ТекСтрока.GLN;
			
	КонецЕсли;

	
	ТаблицаТочекДоставки.Очистить();
	
	СписокТочекДоставки = ПолучитьСписокЭлементовСправочника("ТочкиДоставкиСторонние",СсылкаНаПартнера);
	
	ПодстрокаПоиска = ВРЕГ(ПоискТочкиДоставки);
	
	Если НЕ СписокТочекДоставки = Неопределено Тогда
		
		Для каждого Стр ИЗ СписокТочекДоставки Цикл
			
			//отфильтруем точки доставки
			
			Если ПодстрокаПоиска=""
				Или Найти(ВРЕГ(Стр.GLN),ПодстрокаПоиска)>0
				Или Найти(ВРЕГ(Стр.Наименование),ПодстрокаПоиска)>0
				Или Найти(ВРЕГ(Стр.АдресДоставки),ПодстрокаПоиска)>0
				Или Найти(ВРЕГ(Стр.ЮрФизЛицоПредставление),ПодстрокаПоиска)>0
				Или Найти(ВРЕГ(Стр.ТочкаДоставкиСвойСправочникПредставление),ПодстрокаПоиска)>0
			Тогда
				НоваяСтрока = ТаблицаТочекДоставки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,Стр);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если НЕ ТекGLN = Неопределено Тогда
		НайденнаяСтрока = ТаблицаТочекДоставки.Найти(ТекGLN,"GLN");
		Если НЕ НайденнаяСтрока = Неопределено Тогда
			
			ЭлементыФормы.ТаблицаТочекДоставки.ТекущаяСтрока = НайденнаяСтрока;
			
		КонецЕсли;
	КонецЕсли;
	
	ТаблицаТочекДоставки.Индексы.Добавить("GLN");
	
КонецПроцедуры

Процедура ПриОткрытии()

	Если ЗначениеЗаполнено(СсылкаНаПартнера) Тогда
		
		Партнер = ПолучитьЭлементСправочника("Партнеры",СсылкаНаПартнера);
		
		Наименование 	= Партнер.Наименование;
		GLN				= Партнер.GLN;
		ЭтоТорговаяСеть	= Партнер.ТорговаяСеть;
		ЭтоПоставщик	= Партнер.Поставщик;
		КодСети			= Партнер.КодСети;
		
		СписокЮрЛиц = ПолучитьСписокЭлементовСправочника("ЮрФизЛицаСторонние",СсылкаНаПартнера);
		
		Для каждого Стр ИЗ СписокЮрЛиц Цикл
			
			НоваяСтрока = ТаблицаЮрФизЛиц.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Стр);
			
		КонецЦикла;
		
		мОбновитьСписокНоменклатуры();
		
		ОбновитьСписокТочекДоставки();

//		ЭлементыФормы.КоманднаяПанельТочекДоставки.Кнопки.ОбновитьСписокТочекДоставок.Доступность = ЗначениеЗаполнено(КодСети);
		
		//заполним таблицу синонимов
		СинонимыОднойСтрокой = ПолучитьЗначениеСвойстваОбъектаEDI(СсылкаНаПартнера, "GLN_Партнера_Синонимы");
		
		ТабСинонимов = Новый ТаблицаЗначений;
		ТабСинонимов.Колонки.Добавить("GLN",Новый ОписаниеТипов("Строка"));
		
		МассивСинонимов = EDI_РазложитьСтрокуВМассивСлов(СинонимыОднойСтрокой,",");
		
		Для Каждого Синоним Из МассивСинонимов Цикл
			НовСтрока = ТабСинонимов.Добавить();
			НовСтрока.GLN = Синоним;
		КонецЦикла;
		СинонимыОрганизации = ТабСинонимов;
		
	Иначе
		
		ЭтоНовыйПартнер = Истина;
		
		Если ПолучитьВидКомпании() = "Поставщик" Тогда
        	ЭтоТорговаяСеть = Истина;
		Иначе
			ЭтоПоставщик = Истина;
		КонецЕсли;
				
	КонецЕсли;
	
	ПриОткрытииФормы(ЭтаФорма);
	
	УстановитьТипыЗначенийПолей();

	УправлениеВидимостью();
	
	Оповестить("КонтурEDI_АктивизироватьФормуОшибок","Открытие",ЭтаФорма);
	
	СоздатьДеревоНастроек(ДеревоНастроек,"Партнеры",Партнер);
	
	// Автотесты
	Если ЗначениеЗаполнено(ПараметрыАвтотестирования) Тогда

		ПодключитьОбработчикОжидания("ЗаписатьНастройкиАвтотестирования",0.1,Истина);
		
	КонецЕсли;
	
КонецПроцедуры

// Обновляет список соответствий номенклатуры и пытается позиционировать курсор на строке, выбранной до обновления
// Может, сразу стоит проверять, была ли строка добавлена?
Процедура мОбновитьСписокНоменклатуры()
	
	ТекущееСоответствие = Новый Структура("GTIN,КодТовараПартнера","","");
	ТекущаяСтрока = ЭлементыФормы.ТаблицаНоменклатуры.ТекущаяСтрока;
	
	Если НЕ ТекущаяСтрока=Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ТекущееСоответствие,ТекущаяСтрока);
	КонецЕсли;
	
	ОбновитьСписокНоменклатуры(ТаблицаНоменклатуры,СсылкаНаПартнера);
	
	Варианты = ТаблицаНоменклатуры.НайтиСтроки(ТекущееСоответствие);
	Если Варианты.Количество()>0 Тогда
		ЭлементыФормы.ТаблицаНоменклатуры.ТекущаяСтрока = Варианты[0];
	КонецЕсли;
	
КонецПроцедуры


Процедура ЗаписатьНастройкиАвтотестирования()
	
	СтруктураПараметров = ПараметрыАвтотестирования.Настройки.Партнер;
	
	Наименование = СтруктураПараметров.Наименование;
	GLN = СтруктураПараметров.GLN;
	
	ЭтоТорговаяСеть = Истина;
	
	ЗаписатьИзменения(); // чтобы появилась ссылка на партнера
	
	Для Каждого ЮрЛицо Из СтруктураПараметров.ЮрЛица Цикл
		НоваяСтрока = ТаблицаЮрФизЛиц.Добавить();
		НоваяСтрока.ЮрФизЛицо = Справочники.Контрагенты.НайтиПоКоду(ЮрЛицо.Контрагент);
		НоваяСтрока.GLN = ЮрЛицо.GLN;
	КонецЦикла;
	
	Для Каждого ТД Из СтруктураПараметров.ТочкиДоставки Цикл
		ФормаТД = ПолучитьФорму("ФормаТочкиДоставкиСторонние_Элемент");
		ФормаТД.Партнер = СсылкаНаПартнера;
		ФормаТД.Наименование = ТД.АдресДоставки;
		ФормаТД.АдресДоставки = ТД.АдресДоставки;
		ФормаТД.GLN = ТД.GLN;
		Если ЗначениеЗаполнено(ТД.Контрагент) Тогда
			ФормаТД.ЮрФизЛицо = Справочники.Контрагенты.НайтиПоКоду(ТД.Контрагент);
		КонецЕсли;
		ФормаТД.ОткрытьМодально();
	КонецЦикла;
	
	ТипСправочникаЕдиницы = ПолучитьТипЗначенияОбъекта("ЕдиницаИзмерения");
	ТипСправочникаЕдиницы = СтрЗаменить(ТипСправочникаЕдиницы,"СправочникСсылка.","");
	
	Для Каждого СтрТоваров Из СтруктураПараметров.СоответствияТоваров Цикл
		
		ФормаНоменклатуры = ПолучитьФорму("ФормаНоменклатура_Элемент");
		
		ФормаНоменклатуры.Партнер = СсылкаНаПартнера;
		ФормаНоменклатуры.Наименование = СтрТоваров.НаименованиеПартнера;
		ФормаНоменклатуры.GTIN = СтрТоваров.GTIN;
		ФормаНоменклатуры.КодТовараПартнера = СтрТоваров.КодТовараПартнера;
		
		НоваяСтрока = ФормаНоменклатуры.СписокНоменклатуры.Добавить();
		НоваяСтрока.Номенклатура = Справочники[мИмяСправочникаНоменклатура].НайтиПоКоду(СтрТоваров.Номенклатура);
		Если ЗначениеЗаполнено(ТипСправочникаЕдиницы) Тогда
			НоваяСтрока.ЕдиницаИзмерения = Справочники[ТипСправочникаЕдиницы].НайтиПоКоду(СтрТоваров.ЕдиницаИзмерения);
		КонецЕсли;
		НоваяСтрока.Основной = СтрТоваров.ОсновноеСоответствие;
		НоваяСтрока.ЕдиницаEDI = СтрТоваров.ЕдиницаEDI;
		НоваяСтрока.ДействиеПересчета = СтрТоваров.ДействиеПересчета;
		НоваяСтрока.КоэффициентEDIВ1С = СтрТоваров.КоэффициентEDI;
		
		ФормаНоменклатуры.ОткрытьМодально();
		
	КонецЦикла;
	
	// установим настройки
	Для Каждого СтрНастроек Из СтруктураПараметров.Настройки Цикл
		
		УстановитьЗначениеНастройки(ДеревоНастроек,СокрЛП(СтрНастроек.Настройка),СтрНастроек.Значение);
		
	КонецЦикла;
	
 	КнопкаЗаписатьИЗакрытьНажатие("");
	
КонецПроцедуры

Функция УстановитьЗначениеНастройки(Ветка,ИмяНастройки,Значение)
	
	Для Каждого Стр ИЗ Ветка.Строки Цикл
		Если СокрЛП(Стр.НастройкаИД) = ИмяНастройки Тогда
			Стр.Значение = Значение;
			Возврат Истина;
		КонецЕсли;
		Если УстановитьЗначениеНастройки(Стр,ИмяНастройки,Значение) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Если Вопрос("Данные изменены, сохранить изменения?",РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			Если ЗаписатьИзменения() Тогда
				Оповестить("КонтурEDI_АктивизироватьФормуОшибок","Закрытие",ЭтаФорма);
			Иначе	
				Отказ = Истина;				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//***********************************************************
//	ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ

Процедура КнопкаЗаписатьИЗакрытьНажатие(Кнопка)
	
	Если ЗаписатьИзменения() Тогда
		
		ОбновитьКэшПартнеров();
		
		Оповестить("КонтурEDI_ОбновитьСписокПартнеров");
		
		//для проверки используется RETANN или нет
		//Оповестить("КонтурEDI_НастроитьФорму");
		
		ЭтаФорма.Закрыть(Истина);
		
	КонецЕсли;		
	
КонецПроцедуры

Процедура УправлениеВидимостью()
	
	ЭлементыФормы.ПанельСоответствий.Страницы.СтраницаТочкиДоставки.Видимость = ЭтоТорговаяСеть;
	
	ЭлементыФормы.ТаблицаТочекДоставки.Колонки.ЗагружатьСообщения.Видимость = (ПолучитьКонстантуEDI("ФильтрОбменаПоТочкамДоставки")=Истина);
	ЭлементыФормы.ТаблицаТочекДоставки.Колонки.ТочкаДоставкиСвойСправочник.Видимость = (Строка(ПолучитьКонстантуEDI("СвойСправочникТочекДоставки"))<>"");
	
	ЭлементыФормы.КоманднаяПанельТочекДоставки.Кнопки.Подбор.Доступность = ЭтоТорговаяСеть;
	
	ЭлементыФормы.ПоискТочкиДоставки.Видимость = ЭтоТорговаяСеть;
	
	Если ПараметрыПользователяEDI.РольПользователяEDI<>"ПолныеПрава" Тогда
		//пользователь с ограниченными правами будет редактировать только точки доставки и номенклатуру
		ДоступныеСтраницы = EDI_РазложитьСтрокуВМассивСлов("СтраницаТочкиДоставки,Номенклатура",",");
		Для Каждого Страница Из ЭлементыФормы.ПанельСоответствий.Страницы Цикл
			Если ДоступныеСтраницы.Найти(Страница.Имя)=Неопределено Тогда
				Страница.Видимость = Ложь;
			КонецЕсли;
		КонецЦикла;
		
		ЭлементыФормы.GLN.ТолькоПросмотр			= Истина;
		ЭлементыФормы.Наименование.ТолькоПросмотр	= Истина;
		ЭлементыФормы.ЭтоТорговаяСеть.Доступность	= Ложь;
		ЭлементыФормы.ЭтоПоставщик.Доступность		= Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЭтоТорговаяСетьПриИзменении(Элемент)
	УправлениеВидимостью();
КонецПроцедуры

Процедура ЭтоПоставщикПриИзменении(Элемент)
	УправлениеВидимостью();
КонецПроцедуры

Процедура УдалитьТекущуюСтроку(ЭлементТаблицы,Таблица)
	
	ТекСтрока = ЭлементТаблицы.ТекущиеДанные;
	Если НЕ ТекСтрока = Неопределено Тогда
		Таблица.Удалить(ТекСтрока);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельЮрФизЛицКнопкаДобавить(Кнопка)

	НоваяСтрока = ТаблицаЮрФизЛиц.Добавить();
	
КонецПроцедуры

Процедура КоманднаяПанельЮрФизЛицКнопкаУдалить(Кнопка)

	УдалитьТекущуюСтроку(ЭлементыФормы.ТаблицаЮрФизЛиц,ТаблицаЮрФизЛиц);
	
КонецПроцедуры

Процедура КоманднаяПанельТочекДоставкиКнопкаДобавить(Кнопка)

	ФормаТД = ПолучитьФорму("ФормаТочкиДоставкиСторонние_Элемент",ЭтаФорма);
	Если ФормаТД.Открыта() Тогда
		Предупреждение("Форма уже открыта");
		ФормаТД.Активизировать();
		Возврат;
	КонецЕсли;
	
	ФормаТД.ПоложениеОкна = ВариантПоложенияОкна.НеПерекрыватьВладельца;
	ФормаТД.Партнер = СсылкаНаПартнера;
	
	ФормаТД.Открыть();
	
КонецПроцедуры

Процедура ТаблицаЮрФизЛицПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущаяСтрока = ЭлементыФормы.ТаблицаЮрФизЛиц.ТекущиеДанные;
	
	Если НЕ ТекущаяСтрока = Неопределено Тогда
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.ЮрФизЛицо) Тогда
			ТекущаяСтрока.ЮрФизЛицо = ПолучитьПустуюСсылкуОбъекта("ЮрФизЛицоСтороннее");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуНоменклатуры()
	
	ТекСтрока = ЭлементыФормы.ТаблицаНоменклатуры.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекСтрока) Тогда
		
		ФормаНоменклатуры = ПолучитьФорму("ФормаНоменклатура_Элемент");	
		
		ФормаНоменклатуры.GTIN				= ТекСтрока.GTIN;
		ФормаНоменклатуры.КодТовараПартнера	= ТекСтрока.КодТовараПартнера;
		ФормаНоменклатуры.Партнер			= СсылкаНаПартнера;
		ФормаНоменклатуры.Наименование		= ТекСтрока.Наименование;
		
		ФормаНоменклатуры.ОткрытьМодально();
		
		мОбновитьСписокНоменклатуры();

	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаТочекДоставкиВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекСтрока = ЭлементыФормы.ТаблицаТочекДоставки.ТекущиеДанные;
	
	Если НЕ ТекСтрока = Неопределено Тогда
	
		ФормаТД = ПолучитьФорму("ФормаТочкиДоставкиСторонние_Элемент",ЭтаФорма);
		Если ФормаТД.Открыта() Тогда
			Предупреждение("Форма уже открыта");
			ФормаТД.Активизировать();
			Возврат;
		КонецЕсли;
		ФормаТД.СсылкаТочкиДоставки = ТекСтрока.Ссылка;
		ФормаТД.ПоложениеОкна = ВариантПоложенияОкна.НеПерекрыватьВладельца;
		ФормаТД.Открыть();
	
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "КонтурEDI_ОбновитьСписокТочекДоставки" Тогда
		
		ОбновитьСписокТочекДоставки();
		
		
	ИначеЕсли ИмяСобытия = "КонтурEDI_ОбновитьСписокПартнеров" Тогда
		
		ТаблицаЮрФизЛиц.Очистить();
		СписокЮрЛиц = ПолучитьСписокЭлементовСправочника("ЮрФизЛицаСторонние",СсылкаНаПартнера);
		
		Для каждого Стр ИЗ СписокЮрЛиц Цикл
			
			НоваяСтрока = ТаблицаЮрФизЛиц.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Стр);
			
		КонецЦикла;
		
	ИначеЕсли ИмяСобытия = "КонтурEDI_ЗакрытаФормаСправки" Тогда
		
		КоманднаяПанельТочекДоставкиПодборПослеЗакрытияОбучения();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
КонецПроцедуры

Процедура ТаблицаТочекДоставкиПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

Процедура ТаблицаТочекДоставкиПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
КонецПроцедуры

Процедура КоманднаяПанельТочекДоставкиОбновитьСписокТочекДоставок(Кнопка)
	
	Если Не ЗначениеЗаполнено(СсылкаНаПартнера) Тогда
		Предупреждение("Сохраните данные партнёра для продолжения");
		Возврат;
	КонецЕсли;	
	
	Если не ЗначениеЗаполнено(КодСети) Тогда
		
		СписокСетей = ПолучитьСтруктуруДанныхТорговойСети("list");
		Если СписокСетей<>Неопределено Тогда
			
			ПодходящаяСеть = СписокСетей.Сети.Найти(GLN,"GLN");
			Если ПодходящаяСеть<>Неопределено Тогда
				КодСети = ПодходящаяСеть.Код;
				УстановитьЗначениеСвойстваОбъекта(СсылкаНаПартнера,"КодСети",КодСети);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КодСети) Тогда
		
		Форма = ПолучитьФорму("ФормаСервис_ОбновлениеДанныхПартнера");
		Форма.Параметры = Новый Структура("КодСети", КодСети);
		Форма.ОткрытьМодально();
		
		ОбновитьСписокТочекДоставки();
		
	Иначе
		ВывестиПредупреждение_КонтурEDI("Сеть не найдена на сервере");
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельНоменклатурыДобавить(Кнопка)
	
	ФормаНоменклатуры = ПолучитьФорму("ФормаНоменклатура_Элемент");	
	ФормаНоменклатуры.Партнер = СсылкаНаПартнера;
	ФормаНоменклатуры.ОткрытьМодально();
	
	мОбновитьСписокНоменклатуры();
	
КонецПроцедуры

Процедура КоманднаяПанельНоменклатурыОбновить(Кнопка)
	
	мОбновитьСписокНоменклатуры();
	
КонецПроцедуры

Процедура КоманднаяПанельНоменклатурыИзменить(Кнопка)
	
	ТекСтрока = ЭлементыФормы.ТаблицаНоменклатуры.ТекущиеДанные;
	
	Если НЕ ТекСтрока = Неопределено Тогда
		
		ФормаНоменклатуры = ПолучитьФорму("ФормаНоменклатура_Элемент");	
		ФормаНоменклатуры.Партнер = СсылкаНаПартнера;
		ФормаНоменклатуры.Наименование = ТекСтрока.Наименование;
		ФормаНоменклатуры.GTIN = ТекСтрока.GTIN;
		ФормаНоменклатуры.КодТовараПартнера = ТекСтрока.КодТовараПартнера;
		ФормаНоменклатуры.ОткрытьМодально();
		
		мОбновитьСписокНоменклатуры();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельТочекДоставкиУдалить(Кнопка)

	ТекСтрока = ЭлементыФормы.ТаблицаТочекДоставки.ТекущиеДанные;
	
	Если НЕ ТекСтрока = Неопределено Тогда
		Если Вопрос("Точка доставки """+ТекСтрока.АдресДоставки +"("+ТекСтрока.Наименование+")"+""" будет удалена. Продолжить?",РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет) = КодВозвратаДиалога.Да Тогда
			
			УдалитьЭлементСправочника("ТочкиДоставкиСторонние",ТекСтрока.Ссылка);
			ОбновитьСписокТочекДоставки();
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельЮрФизЛицОбновитьСписокПартнеров(Кнопка)
	
	Если Не ЗначениеЗаполнено(СсылкаНаПартнера) Тогда
		Предупреждение("Сохраните данные партнёра для продолжения");
		Возврат;
	КонецЕсли;	
	
	Если не ЗначениеЗаполнено(КодСети) Тогда
		
		СписокСетей = ПолучитьСтруктуруДанныхТорговойСети("list");
		Если СписокСетей<>Неопределено Тогда
			
			ПодходящаяСеть = СписокСетей.Сети.Найти(GLN,"GLN");
			Если ПодходящаяСеть<>Неопределено Тогда
				КодСети = ПодходящаяСеть.Код;
				УстановитьЗначениеСвойстваОбъекта(СсылкаНаПартнера,"КодСети",КодСети);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КодСети) Тогда

		СсылкаСети = ПолучитьТорговуюСетьПоКоду(КодСети);
		//запустить форму добавления юр лиц как при начале работы с сетью и удалить оттуда лишние сети и проставить контрагентов
		//и посмотреть чтоб формочка дубль сети не создала в свойствах
		СтруктураСети = ПолучитьЭлементСправочника("Партнеры",СсылкаСети);
		
		
		ФормаДокинутьЮрЛиц=ПолучитьФорму("ФормаСервис_ПодключениеКТорговымСетям");
		Если не ФормаДокинутьЮрЛиц.Открыта() Тогда
			
			ФормаДокинутьЮрЛиц.ЭлементыФормы.НадписьЗаголовокЮрФизЛицТорговыхСетей1.Заголовок="Выберите юр. лиц сети """
			//+Строка(СсылкаСети)
			+СтруктураСети.Наименование
			+""" с которыми Вы собираетесь работать, 
			|укажите соответствующих им контрагентов.";
			ФормаДокинутьЮрЛиц.ДобавлениеЮрЛицСети=КодСети;
			ФормаДокинутьЮрЛиц.ФормаОткрытаКакДобавлениеЮрЛиц=истина;
			ФормаДокинутьЮрЛиц.Открыть();
			
		Иначе
			Предупреждение("Для проведения этой операции закройте форму добавления новой сети!");
		КонецЕсли;

	Иначе
		ВывестиПредупреждение_КонтурEDI("Сеть не найдена на сервере");
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаЮрФизЛицЮрФизЛицоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
		НайденныйПартнер = ОпределитьПартнера(Новый Структура("ТипЗначения,ЮрФизЛицо","ЮрФизЛицо",ВыбранноеЗначение));
		
		Если ЗначениеЗаполнено(НайденныйПартнер) Тогда
			ВывестиПредупреждение_КонтурEDI("Выбрано недопустимое значение! Данное юр. / физ. лицо уже сопоставлено с одной из торговых сетей.");
			ВыбранноеЗначение = Справочники[ВыбранноеЗначение.Метаданные().Представление()].ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры 

Процедура ТаблицаНоменклатурыПередНачаломДобавления(Элемент, Отказ, Копирование)

	Отказ = Истина;
	
КонецПроцедуры

Процедура ТаблицаНоменклатурыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

Процедура ТаблицаНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ОткрытьФормуНоменклатуры();
	
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

//процедуры обслуживания дерева настроек

Процедура ДеревоНастроекЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	ТекСтрока=ЭлементыФормы.ДеревоНастроек.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекСтрока.Список) Тогда
		СтандартнаяОбработка=Ложь;
		СЗ=ЗначениеИзСтрокиВнутр(ТекСтрока.Список);
		Выб=СЗ.ВыбратьЭлемент();
		Если Выб<>Неопределено Тогда
			ТекСтрока.Значение=Выб.Значение;
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

Процедура ДеревоНастроекПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.ЭтоГруппа Тогда
		ОформлениеСтроки.Шрифт=Новый Шрифт(,,Истина);//жирный
	КонецЕсли;	
	
	ПолеДоступно = Истина;
	
	Если ПолеДоступно = Истина Тогда
		Если ТипЗнч(ДанныеСтроки.Значение)=Тип("Булево") Тогда
			ОформлениеСтроки.Ячейки.Значение.УстановитьФлажок(ДанныеСтроки.Значение);
			ОформлениеСтроки.Ячейки.Значение.УстановитьТекст("");
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

Процедура ДеревоНастроекВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если Колонка.Имя="Значение" 
		И ВыбраннаяСтрока.ЭтоГруппа Тогда
		СтандартнаяОбработка=Ложь;
	КонецЕсли;	
КонецПроцедуры

Процедура ДеревоНастроекПередНачаломИзменения(Элемент, Отказ)
	Если Элемент.ТекущаяКолонка.Имя="Значение" 
		И Элемент.ТекущаяСтрока.ЭтоГруппа Тогда
		Отказ=Истина;
	КонецЕсли;	
	
	Если Элемент.ТекущаяКолонка.Имя="Значение" 
		И ТипЗнч(Элемент.ТекущаяСтрока.Значение)=Тип("Булево") Тогда
		Элемент.ТекущаяСтрока.Значение = Не Элемент.ТекущаяСтрока.Значение;
		Отказ=Истина;
	КонецЕсли;
	
	//фиксированные списки редактировать не дадим
	Если Элемент.ТекущаяКолонка.Имя="Значение" 
		И Элемент.ТекущаяСтрока.ОписаниеТипа=Новый ОписаниеТипов("СписокЗначений") Тогда
		Отказ=Истина;
		ДеревоНастроекЗначениеНачалоВыбора(Элемент,Ложь);
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ДеревоНастроекПриИзмененииФлажка(Элемент, Колонка)
	
	ТекДанные = Элемент.ТекущиеДанные;
	
	Если ТипЗнч(ТекДанные.Значение)=Тип("Булево") Тогда
		ТекДанные.Значение = Не ТекДанные.Значение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаЮрФизЛицПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

Процедура ТаблицаЮрФизЛицПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
КонецПроцедуры

Процедура СинонимыОрганизацииПередНачаломДобавления(Элемент, Отказ, Копирование)
	//Если СинонимыОрганизации.Количество()>4 Тогда
	//	Отказ = Истина;
	//	Предупреждение("Допускается не более 5 синонимов для партнера");
	//КонецЕсли;	
КонецПроцедуры

Процедура ПоискТочкиДоставкиОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбновитьСписокТочекДоставки();
	
КонецПроцедуры

Процедура ПоискТочкиДоставкиОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ПоискТочкиДоставки = Текст;
	ОбновитьСписокТочекДоставки();
	
КонецПроцедуры

Процедура ПоискТочкиДоставкиОчистка(Элемент, СтандартнаяОбработка)
	
	ОбновитьСписокТочекДоставки();
	
КонецПроцедуры

Процедура КоманднаяПанельТочекДоставкиПодбор(Кнопка)
	
	Если мФормаПодбора<>Неопределено
		И мФормаПодбора.Открыта() Тогда
		Возврат;
	КонецЕсли;
	
	//Попробуем включить обучалку.
	ФормаСправки = ПолучитьФормуИнтерактивнойСправки("Форма_ПартнерыЭлемент_ПодборТочекДоставки",ЭтаФорма);
	Если ФормаСправки=Неопределено Тогда
		КоманднаяПанельТочекДоставкиПодборПослеЗакрытияОбучения();
	Иначе
		ФормаСправки.Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельТочекДоставкиПодборПослеЗакрытияОбучения()
	
	Если ЭлементыФормы.ТаблицаТочекДоставки.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТипПоля	= ПолучитьТипЗначенияОбъекта("ЮрФизЛицоСтороннее");
	
	Если Лев(ВРЕГ(ТипПоля),10)="СПРАВОЧНИК" Тогда
		
		СтандартнаяОбработка = Ложь;
		ИмяСправочника = ПолучитьТипЗначенияОбъекта("ЮрФизЛицоСтороннее",,Истина);
		ФРМ = Справочники[ИмяСправочника].ПолучитьФормуВыбора(,ЭтаФорма);
		ФРМ.ПоложениеОкна = ВариантПоложенияОкна.НеПерекрыватьВладельца;
		ФРМ.ЗакрыватьПриВыборе = Ложь;
		ФРМ.Открыть();
		мФормаПодбора = ФРМ;
		УстановитьЗаголовокФормыПодбора();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьЗаголовокФормыПодбора()
	
	Если ЭлементыФормы.ТаблицаТочекДоставки.ТекущиеДанные <> Неопределено 
		И мФормаПодбора<>Неопределено
		И мФормаПодбора.Открыта()	Тогда
		
		мФормаПодбора.Заголовок = "Выберите соответствие для точки доставки: "+ЭлементыФормы.ТаблицаТочекДоставки.ТекущиеДанные.Наименование;
		
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	ТекСтрока = ЭлементыФормы.ТаблицаТочекДоставки.ТекущаяСтрока;
	
	Если ТекСтрока<>Неопределено Тогда
		
		
		СтруктураЭлемента = ПолучитьЭлементСправочника("ТочкиДоставкиСторонние", ТекСтрока.Ссылка);
		
		СтруктураЭлемента.Вставить("ЮрФизЛицо",		ЗначениеВыбора);
		//СтруктураПолей.Вставить("ТочкаДоставкиСвойСправочник",			ТочкаДоставкиСвойСправочник);
		
		Попытка
			СохранитьЭлементСправочника("ТочкиДоставкиСторонние",ТекСтрока.Ссылка,СтруктураЭлемента);
			ТекСтрока.ЮрФизЛицо = ЗначениеВыбора;//обновим список
			
			//можно еще сразу сдвинуть курсор на след.строку
			ИндексТекущейСтроки = ТаблицаТочекДоставки.Индекс(ТекСтрока);
			Если ИндексТекущейСтроки<ТаблицаТочекДоставки.Количество()-1 Тогда
				ЭлементыФормы.ТаблицаТочекДоставки.ТекущаяСтрока = ТаблицаТочекДоставки[ИндексТекущейСтроки+1];
				УстановитьЗаголовокФормыПодбора();
			КонецЕсли;
			
		Исключение
		КонецПопытки;
		
	КонецЕсли;
	
	
КонецПроцедуры

Процедура КоманднаяПанельТочекДоставкиПоиск(Кнопка)
	//заглушка
КонецПроцедуры

Процедура ТаблицаТочекДоставкиПриАктивизацииСтроки(Элемент)
	
	УстановитьЗаголовокФормыПодбора();

КонецПроцедуры

мИмяСправочникаНоменклатура = ПолучитьТипЗначенияОбъекта("Номенклатура",,Истина);
