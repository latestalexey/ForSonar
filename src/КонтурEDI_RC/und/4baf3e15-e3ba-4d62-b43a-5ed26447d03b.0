{2,
{28,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,0,
{1,1,
{"ru","Контур.EDI Просмотр расхождений"}
},0,0,1,1,1,0,3,0,
{1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере"},
{0},1,
{17,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{0,2,0},1,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{19,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаЗакрыть",
{1,0},1,
{0,3772996b-41f4-4c47-a5a8-ea397db424ae},
{0},2,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,
{3,0,
{0},"",-1,-1,1,0},1,
{"Pattern"},"",0},1},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{30,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},6,"Таблица",0,0,
{1,0},
{1,0},
{1,
{5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{3,0,
{0},"",-1,-1,1,0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{7,50,10,1,1,0,0,1,1,0,0,1,0,0,1,
{3,4,
{0}
},1,1,
{0}
},
{0},1,
{17,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ТаблицаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{"Pattern"},
{"Pattern"},"","",
{0},0},"","",1,
{17,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,0,1}
},"&НаСервере
Перем ОбработкаОбъект;

&НаСервере
Перем ПараметрыВывода;

&НаСервере
//инициализация модуля и его экспортных функций
Функция МодульОбъекта()

	Если ОбработкаОбъект=Неопределено Тогда
		ОбработкаОбъект = РеквизитФормыВЗначение(""Объект"");
		ОбработкаОбъект.ИнициализироватьПодключаемыеМодули();
	КонецЕсли;	
	
	Возврат ОбработкаОбъект;
	
КонецФункции 


&НаСервере
Процедура ДобавитьОписаниеОшибки(ТаблицаОшибок, ТекстОшибки)
	
	НоваяСтрока = ТаблицаОшибок.Добавить();
	НоваяСтрока.ТекстОшибки = ТекстОшибки;	
	
КонецПроцедуры

&НаСервере
Функция ПроверитьВходныеПараметры()
	
	Успешно = Истина;	
	ТаблицаОшибок = Новый ТаблицаЗначений;
	ТаблицаОшибок.Колонки.Добавить(""ТекстОшибки"");
	
	ВидРасхождения = Параметры.ВидРасхождения;
	
	Если ВидРасхождения = ""РасхожденияЗаказа"" Тогда
		
		Если Не ЗначениеЗаполнено(Параметры.Заказ) Тогда
			Успешно = Ложь;
			ДобавитьОписаниеОшибки(ТаблицаОшибок, ""Отсутствует документ заказа в 1С."");
		КонецЕсли;	
		
	ИначеЕсли ВидРасхождения = ""РасхожденияПриемки"" Тогда
		
		Если Не ЗначениеЗаполнено(Параметры.Накладная) Тогда
			Успешно = Ложь;
			ДобавитьОписаниеОшибки(ТаблицаОшибок, ""Отсутствует документ накладной в 1С."");
		КонецЕсли;
		
	ИначеЕсли ВидРасхождения = ""РасхожденияВерсийЗаказа"" Тогда
		
		Если Не ЗначениеЗаполнено(Параметры.Заказ) Тогда
			Успешно = Ложь;
			ДобавитьОписаниеОшибки(ТаблицаОшибок, ""Отсутствует Ссылка на сообщение в 1С."");
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не Успешно Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = ""Невозможно выполнить анализ расхождений:"";
		СообщениеПользователю.Сообщить();
		Для Каждого Строка Из ТаблицаОшибок Цикл
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = Строка.ТекстОшибки;
			СообщениеПользователю.Сообщить();
        КонецЦикла;
	КонецЕсли;
	
	Возврат Успешно;	
	
КонецФункции

&НаСервере
Функция ПроверитьПараметрыВывода()
	
	Если Не ПараметрыВывода.Успешно	Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = ""Невозможно выполнить анализ расхождений: "" + ПараметрыВывода.ОписаниеОшибки;
		СообщениеПользователю.Сообщить();
	КонецЕсли;
	
	Возврат ПараметрыВывода.Успешно;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Макет = МодульОбъекта().ПолучитьМакет(""МакетСравненияТабличныхЧастей"");
	
	ВходныеПараметрыВалидны = ПроверитьВходныеПараметры();
	
	Если ВходныеПараметрыВалидны Тогда
		
		ПараметрыРасхождения = Новый Структура;
		Если ЗначениеЗаполнено(Параметры.Параметры) И ТипЗнч(Параметры.Параметры) = Тип(""Структура"") Тогда
			ПараметрыРасхождения = Параметры.Параметры;
		КонецЕсли;
		Если ЗначениеЗаполнено(Параметры.СравниваемыеПоля) Тогда
			ПараметрыРасхождения.Вставить(""СравниваемыеПоля"", Параметры.СравниваемыеПоля);
		КонецЕсли;
		
		ВидРасхождения = Параметры.ВидРасхождения;
			
		Если ВидРасхождения = ""РасхожденияЗаказа"" Тогда
			
			Заказ 					= Параметры.Заказ;
			ПараметрыВывода 		= МодульОбъекта().ПолучитьДанныеРасхожденияЗаказаПокупателя(Заказ, ПараметрыРасхождения);
						
		ИначеЕсли ВидРасхождения = ""РасхожденияПриемки"" Тогда
			
			Накладная				= Параметры.Накладная;
			ПараметрыВывода 		= МодульОбъекта().ПолучитьДанныеРасхожденияПриемки(Накладная, ПараметрыРасхождения);
			
		ИначеЕсли ВидРасхождения = ""РасхожденияВерсийЗаказа"" Тогда
			
			Заказ					= Параметры.Заказ;
			ПараметрыВывода 		= МодульОбъекта().ПолучитьДанныеРасхожденияВерсийЗаказа(Заказ, ПараметрыРасхождения);
			
		КонецЕсли; 
		
		ПараметрыВыводаВалидны = ПроверитьПараметрыВывода();
		
		Если ПараметрыВыводаВалидны Тогда
			
			МодульОбъекта().ВывестиРасхождения(Таблица, Макет, ПараметрыВывода);	
			
		КонецЕсли;
		
	КонецЕсли;
	    	
КонецПроцедуры",
{4,4,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",8c4601e1-5504-4f9a-8535-06152d8737be}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"Макет",
{1,1,
{"ru","Макет"}
},
{"Pattern",
{"#",e603103e-a318-4edc-a014-b1c6cf94d49f}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{4},0,"ПутьКФормам",
{1,1,
{"ru","Путь к формам"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{5},0,"Таблица",
{1,0},
{"Pattern",
{"#",e603103e-a318-4edc-a014-b1c6cf94d49f}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,6,
{0,"ВидРасхождения",
{"Pattern",
{"S",30,1}
},0},
{0,"Заказ",
{"Pattern",
{"#",38bfd075-3e63-4aaa-a93e-94521380d579},
{"#",e61ef7b8-f3e1-4f4b-8ac7-676e90524997}
},0},
{0,"Накладная",
{"Pattern",
{"#",38bfd075-3e63-4aaa-a93e-94521380d579}
},0},
{0,"Параметры",
{"Pattern"},0},
{0,"СравниваемыеПоля",
{"Pattern",
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3}
},0},
{0,"СравниваемыеПоляШапки",
{"Pattern",
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3}
},0}
},
{0,0},
{0,0},
{0,0}
}